/*
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.decisionlens.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.decisionlens.client.model.Column;
import com.decisionlens.client.model.Filter;
import com.decisionlens.client.model.PlanningPeriod;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ExportConfig
 */

public class ExportConfig {
  @SerializedName("projectIds")
  private List<String> projectIds = null;

  @SerializedName("costFieldIds")
  private List<String> costFieldIds = null;

  @SerializedName("columns")
  private List<Column> columns = null;

  @SerializedName("planningPeriod")
  private PlanningPeriod planningPeriod = null;

  @SerializedName("filters")
  private List<Filter> filters = null;

  public ExportConfig projectIds(List<String> projectIds) {
    this.projectIds = projectIds;
    return this;
  }

  public ExportConfig addProjectIdsItem(String projectIdsItem) {
    if (this.projectIds == null) {
      this.projectIds = new ArrayList<String>();
    }
    this.projectIds.add(projectIdsItem);
    return this;
  }

   /**
   * Get projectIds
   * @return projectIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getProjectIds() {
    return projectIds;
  }

  public void setProjectIds(List<String> projectIds) {
    this.projectIds = projectIds;
  }

  public ExportConfig costFieldIds(List<String> costFieldIds) {
    this.costFieldIds = costFieldIds;
    return this;
  }

  public ExportConfig addCostFieldIdsItem(String costFieldIdsItem) {
    if (this.costFieldIds == null) {
      this.costFieldIds = new ArrayList<String>();
    }
    this.costFieldIds.add(costFieldIdsItem);
    return this;
  }

   /**
   * Get costFieldIds
   * @return costFieldIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getCostFieldIds() {
    return costFieldIds;
  }

  public void setCostFieldIds(List<String> costFieldIds) {
    this.costFieldIds = costFieldIds;
  }

  public ExportConfig columns(List<Column> columns) {
    this.columns = columns;
    return this;
  }

  public ExportConfig addColumnsItem(Column columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<Column>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Get columns
   * @return columns
  **/
  @ApiModelProperty(value = "")
  public List<Column> getColumns() {
    return columns;
  }

  public void setColumns(List<Column> columns) {
    this.columns = columns;
  }

  public ExportConfig planningPeriod(PlanningPeriod planningPeriod) {
    this.planningPeriod = planningPeriod;
    return this;
  }

   /**
   * Get planningPeriod
   * @return planningPeriod
  **/
  @ApiModelProperty(value = "")
  public PlanningPeriod getPlanningPeriod() {
    return planningPeriod;
  }

  public void setPlanningPeriod(PlanningPeriod planningPeriod) {
    this.planningPeriod = planningPeriod;
  }

  public ExportConfig filters(List<Filter> filters) {
    this.filters = filters;
    return this;
  }

  public ExportConfig addFiltersItem(Filter filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<Filter>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @ApiModelProperty(value = "")
  public List<Filter> getFilters() {
    return filters;
  }

  public void setFilters(List<Filter> filters) {
    this.filters = filters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportConfig exportConfig = (ExportConfig) o;
    return Objects.equals(this.projectIds, exportConfig.projectIds) &&
        Objects.equals(this.costFieldIds, exportConfig.costFieldIds) &&
        Objects.equals(this.columns, exportConfig.columns) &&
        Objects.equals(this.planningPeriod, exportConfig.planningPeriod) &&
        Objects.equals(this.filters, exportConfig.filters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectIds, costFieldIds, columns, planningPeriod, filters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportConfig {\n");
    
    sb.append("    projectIds: ").append(toIndentedString(projectIds)).append("\n");
    sb.append("    costFieldIds: ").append(toIndentedString(costFieldIds)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    planningPeriod: ").append(toIndentedString(planningPeriod)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

