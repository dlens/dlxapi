/*
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.decisionlens.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.decisionlens.client.model.Attributes;
import com.decisionlens.client.model.CustomNames;
import com.decisionlens.client.model.DlResource;
import com.decisionlens.client.model.Fields;
import com.decisionlens.client.model.Portfolio;
import com.decisionlens.client.model.PortfolioPlanUser;
import com.decisionlens.client.model.PortfolioPlanUsers;
import com.decisionlens.client.model.PortfolioPlans;
import com.decisionlens.client.model.Projects;
import com.decisionlens.client.model.ResourcePools;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Portfolio
 */

public class Portfolio extends DlResource {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("isArchived")
  private Boolean isArchived = null;

  @SerializedName("baselinePortfolioPlanUser")
  private PortfolioPlanUser baselinePortfolioPlanUser = null;

  @SerializedName("fields")
  private Fields fields = null;

  @SerializedName("projects")
  private Projects projects = null;

  @SerializedName("portfolioPlans")
  private PortfolioPlans portfolioPlans = null;

  @SerializedName("portfolioPlanUsers")
  private PortfolioPlanUsers portfolioPlanUsers = null;

  @SerializedName("attributes")
  private Attributes attributes = null;

  @SerializedName("isCombined")
  private Boolean isCombined = null;

  @SerializedName("userRegistrationToken")
  private String userRegistrationToken = null;

  @SerializedName("subPortfolios")
  private List<Portfolio> subPortfolios = null;

  @SerializedName("combinedPortfolios")
  private List<Portfolio> combinedPortfolios = null;

  @SerializedName("resourcePools")
  private ResourcePools resourcePools = null;

  @SerializedName("totalBudget")
  private Double totalBudget = 0.0d;

  @SerializedName("newNotificationsCount")
  private Integer newNotificationsCount = null;

  @SerializedName("customNames")
  private CustomNames customNames = null;

  public Portfolio name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Portfolio description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Portfolio isArchived(Boolean isArchived) {
    this.isArchived = isArchived;
    return this;
  }

   /**
   * Get isArchived
   * @return isArchived
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsArchived() {
    return isArchived;
  }

  public void setIsArchived(Boolean isArchived) {
    this.isArchived = isArchived;
  }

  public Portfolio baselinePortfolioPlanUser(PortfolioPlanUser baselinePortfolioPlanUser) {
    this.baselinePortfolioPlanUser = baselinePortfolioPlanUser;
    return this;
  }

   /**
   * Get baselinePortfolioPlanUser
   * @return baselinePortfolioPlanUser
  **/
  @ApiModelProperty(value = "")
  public PortfolioPlanUser getBaselinePortfolioPlanUser() {
    return baselinePortfolioPlanUser;
  }

  public void setBaselinePortfolioPlanUser(PortfolioPlanUser baselinePortfolioPlanUser) {
    this.baselinePortfolioPlanUser = baselinePortfolioPlanUser;
  }

  public Portfolio fields(Fields fields) {
    this.fields = fields;
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @ApiModelProperty(value = "")
  public Fields getFields() {
    return fields;
  }

  public void setFields(Fields fields) {
    this.fields = fields;
  }

  public Portfolio projects(Projects projects) {
    this.projects = projects;
    return this;
  }

   /**
   * Get projects
   * @return projects
  **/
  @ApiModelProperty(value = "")
  public Projects getProjects() {
    return projects;
  }

  public void setProjects(Projects projects) {
    this.projects = projects;
  }

  public Portfolio portfolioPlans(PortfolioPlans portfolioPlans) {
    this.portfolioPlans = portfolioPlans;
    return this;
  }

   /**
   * Get portfolioPlans
   * @return portfolioPlans
  **/
  @ApiModelProperty(value = "")
  public PortfolioPlans getPortfolioPlans() {
    return portfolioPlans;
  }

  public void setPortfolioPlans(PortfolioPlans portfolioPlans) {
    this.portfolioPlans = portfolioPlans;
  }

  public Portfolio portfolioPlanUsers(PortfolioPlanUsers portfolioPlanUsers) {
    this.portfolioPlanUsers = portfolioPlanUsers;
    return this;
  }

   /**
   * Get portfolioPlanUsers
   * @return portfolioPlanUsers
  **/
  @ApiModelProperty(value = "")
  public PortfolioPlanUsers getPortfolioPlanUsers() {
    return portfolioPlanUsers;
  }

  public void setPortfolioPlanUsers(PortfolioPlanUsers portfolioPlanUsers) {
    this.portfolioPlanUsers = portfolioPlanUsers;
  }

  public Portfolio attributes(Attributes attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public Attributes getAttributes() {
    return attributes;
  }

  public void setAttributes(Attributes attributes) {
    this.attributes = attributes;
  }

  public Portfolio isCombined(Boolean isCombined) {
    this.isCombined = isCombined;
    return this;
  }

   /**
   * Get isCombined
   * @return isCombined
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsCombined() {
    return isCombined;
  }

  public void setIsCombined(Boolean isCombined) {
    this.isCombined = isCombined;
  }

  public Portfolio userRegistrationToken(String userRegistrationToken) {
    this.userRegistrationToken = userRegistrationToken;
    return this;
  }

   /**
   * user registration token string
   * @return userRegistrationToken
  **/
  @ApiModelProperty(value = "user registration token string")
  public String getUserRegistrationToken() {
    return userRegistrationToken;
  }

  public void setUserRegistrationToken(String userRegistrationToken) {
    this.userRegistrationToken = userRegistrationToken;
  }

  public Portfolio subPortfolios(List<Portfolio> subPortfolios) {
    this.subPortfolios = subPortfolios;
    return this;
  }

  public Portfolio addSubPortfoliosItem(Portfolio subPortfoliosItem) {
    if (this.subPortfolios == null) {
      this.subPortfolios = new ArrayList<Portfolio>();
    }
    this.subPortfolios.add(subPortfoliosItem);
    return this;
  }

   /**
   * Get subPortfolios
   * @return subPortfolios
  **/
  @ApiModelProperty(value = "")
  public List<Portfolio> getSubPortfolios() {
    return subPortfolios;
  }

  public void setSubPortfolios(List<Portfolio> subPortfolios) {
    this.subPortfolios = subPortfolios;
  }

  public Portfolio combinedPortfolios(List<Portfolio> combinedPortfolios) {
    this.combinedPortfolios = combinedPortfolios;
    return this;
  }

  public Portfolio addCombinedPortfoliosItem(Portfolio combinedPortfoliosItem) {
    if (this.combinedPortfolios == null) {
      this.combinedPortfolios = new ArrayList<Portfolio>();
    }
    this.combinedPortfolios.add(combinedPortfoliosItem);
    return this;
  }

   /**
   * Get combinedPortfolios
   * @return combinedPortfolios
  **/
  @ApiModelProperty(value = "")
  public List<Portfolio> getCombinedPortfolios() {
    return combinedPortfolios;
  }

  public void setCombinedPortfolios(List<Portfolio> combinedPortfolios) {
    this.combinedPortfolios = combinedPortfolios;
  }

  public Portfolio resourcePools(ResourcePools resourcePools) {
    this.resourcePools = resourcePools;
    return this;
  }

   /**
   * Get resourcePools
   * @return resourcePools
  **/
  @ApiModelProperty(value = "")
  public ResourcePools getResourcePools() {
    return resourcePools;
  }

  public void setResourcePools(ResourcePools resourcePools) {
    this.resourcePools = resourcePools;
  }

  public Portfolio totalBudget(Double totalBudget) {
    this.totalBudget = totalBudget;
    return this;
  }

   /**
   * Get totalBudget
   * @return totalBudget
  **/
  @ApiModelProperty(value = "")
  public Double getTotalBudget() {
    return totalBudget;
  }

  public void setTotalBudget(Double totalBudget) {
    this.totalBudget = totalBudget;
  }

  public Portfolio newNotificationsCount(Integer newNotificationsCount) {
    this.newNotificationsCount = newNotificationsCount;
    return this;
  }

   /**
   * Get newNotificationsCount
   * @return newNotificationsCount
  **/
  @ApiModelProperty(value = "")
  public Integer getNewNotificationsCount() {
    return newNotificationsCount;
  }

  public void setNewNotificationsCount(Integer newNotificationsCount) {
    this.newNotificationsCount = newNotificationsCount;
  }

  public Portfolio customNames(CustomNames customNames) {
    this.customNames = customNames;
    return this;
  }

   /**
   * Get customNames
   * @return customNames
  **/
  @ApiModelProperty(value = "")
  public CustomNames getCustomNames() {
    return customNames;
  }

  public void setCustomNames(CustomNames customNames) {
    this.customNames = customNames;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Portfolio portfolio = (Portfolio) o;
    return Objects.equals(this.name, portfolio.name) &&
        Objects.equals(this.description, portfolio.description) &&
        Objects.equals(this.isArchived, portfolio.isArchived) &&
        Objects.equals(this.baselinePortfolioPlanUser, portfolio.baselinePortfolioPlanUser) &&
        Objects.equals(this.fields, portfolio.fields) &&
        Objects.equals(this.projects, portfolio.projects) &&
        Objects.equals(this.portfolioPlans, portfolio.portfolioPlans) &&
        Objects.equals(this.portfolioPlanUsers, portfolio.portfolioPlanUsers) &&
        Objects.equals(this.attributes, portfolio.attributes) &&
        Objects.equals(this.isCombined, portfolio.isCombined) &&
        Objects.equals(this.userRegistrationToken, portfolio.userRegistrationToken) &&
        Objects.equals(this.subPortfolios, portfolio.subPortfolios) &&
        Objects.equals(this.combinedPortfolios, portfolio.combinedPortfolios) &&
        Objects.equals(this.resourcePools, portfolio.resourcePools) &&
        Objects.equals(this.totalBudget, portfolio.totalBudget) &&
        Objects.equals(this.newNotificationsCount, portfolio.newNotificationsCount) &&
        Objects.equals(this.customNames, portfolio.customNames) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, isArchived, baselinePortfolioPlanUser, fields, projects, portfolioPlans, portfolioPlanUsers, attributes, isCombined, userRegistrationToken, subPortfolios, combinedPortfolios, resourcePools, totalBudget, newNotificationsCount, customNames, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Portfolio {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    baselinePortfolioPlanUser: ").append(toIndentedString(baselinePortfolioPlanUser)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    portfolioPlans: ").append(toIndentedString(portfolioPlans)).append("\n");
    sb.append("    portfolioPlanUsers: ").append(toIndentedString(portfolioPlanUsers)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    isCombined: ").append(toIndentedString(isCombined)).append("\n");
    sb.append("    userRegistrationToken: ").append(toIndentedString(userRegistrationToken)).append("\n");
    sb.append("    subPortfolios: ").append(toIndentedString(subPortfolios)).append("\n");
    sb.append("    combinedPortfolios: ").append(toIndentedString(combinedPortfolios)).append("\n");
    sb.append("    resourcePools: ").append(toIndentedString(resourcePools)).append("\n");
    sb.append("    totalBudget: ").append(toIndentedString(totalBudget)).append("\n");
    sb.append("    newNotificationsCount: ").append(toIndentedString(newNotificationsCount)).append("\n");
    sb.append("    customNames: ").append(toIndentedString(customNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

