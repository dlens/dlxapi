/*
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.decisionlens.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.decisionlens.client.model.CategorizationInsight;
import com.decisionlens.client.model.DlResource;
import com.decisionlens.client.model.GradingType;
import com.decisionlens.client.model.Insight;
import com.decisionlens.client.model.Portfolio;
import com.decisionlens.client.model.PortfolioPlanInsights;
import com.decisionlens.client.model.Wiwo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PortfolioPlanInsights
 */

public class PortfolioPlanInsights extends DlResource {
  @SerializedName("portfolio")
  private Portfolio portfolio = null;

  @SerializedName("subPortfolioInsights")
  private List<PortfolioPlanInsights> subPortfolioInsights = null;

  @SerializedName("insights")
  private List<Insight> insights = null;

  @SerializedName("statusInsights")
  private List<CategorizationInsight> statusInsights = null;

  @SerializedName("budget")
  private Double budget = null;

  @SerializedName("allocation")
  private Double allocation = null;

  @SerializedName("gradingType")
  private GradingType gradingType = null;

  @SerializedName("wiwo")
  private Wiwo wiwo = null;

  public PortfolioPlanInsights portfolio(Portfolio portfolio) {
    this.portfolio = portfolio;
    return this;
  }

   /**
   * Get portfolio
   * @return portfolio
  **/
  @ApiModelProperty(value = "")
  public Portfolio getPortfolio() {
    return portfolio;
  }

  public void setPortfolio(Portfolio portfolio) {
    this.portfolio = portfolio;
  }

  public PortfolioPlanInsights subPortfolioInsights(List<PortfolioPlanInsights> subPortfolioInsights) {
    this.subPortfolioInsights = subPortfolioInsights;
    return this;
  }

  public PortfolioPlanInsights addSubPortfolioInsightsItem(PortfolioPlanInsights subPortfolioInsightsItem) {
    if (this.subPortfolioInsights == null) {
      this.subPortfolioInsights = new ArrayList<PortfolioPlanInsights>();
    }
    this.subPortfolioInsights.add(subPortfolioInsightsItem);
    return this;
  }

   /**
   * Get subPortfolioInsights
   * @return subPortfolioInsights
  **/
  @ApiModelProperty(value = "")
  public List<PortfolioPlanInsights> getSubPortfolioInsights() {
    return subPortfolioInsights;
  }

  public void setSubPortfolioInsights(List<PortfolioPlanInsights> subPortfolioInsights) {
    this.subPortfolioInsights = subPortfolioInsights;
  }

  public PortfolioPlanInsights insights(List<Insight> insights) {
    this.insights = insights;
    return this;
  }

  public PortfolioPlanInsights addInsightsItem(Insight insightsItem) {
    if (this.insights == null) {
      this.insights = new ArrayList<Insight>();
    }
    this.insights.add(insightsItem);
    return this;
  }

   /**
   * Get insights
   * @return insights
  **/
  @ApiModelProperty(value = "")
  public List<Insight> getInsights() {
    return insights;
  }

  public void setInsights(List<Insight> insights) {
    this.insights = insights;
  }

  public PortfolioPlanInsights statusInsights(List<CategorizationInsight> statusInsights) {
    this.statusInsights = statusInsights;
    return this;
  }

  public PortfolioPlanInsights addStatusInsightsItem(CategorizationInsight statusInsightsItem) {
    if (this.statusInsights == null) {
      this.statusInsights = new ArrayList<CategorizationInsight>();
    }
    this.statusInsights.add(statusInsightsItem);
    return this;
  }

   /**
   * Get statusInsights
   * @return statusInsights
  **/
  @ApiModelProperty(value = "")
  public List<CategorizationInsight> getStatusInsights() {
    return statusInsights;
  }

  public void setStatusInsights(List<CategorizationInsight> statusInsights) {
    this.statusInsights = statusInsights;
  }

  public PortfolioPlanInsights budget(Double budget) {
    this.budget = budget;
    return this;
  }

   /**
   * Get budget
   * @return budget
  **/
  @ApiModelProperty(value = "")
  public Double getBudget() {
    return budget;
  }

  public void setBudget(Double budget) {
    this.budget = budget;
  }

  public PortfolioPlanInsights allocation(Double allocation) {
    this.allocation = allocation;
    return this;
  }

   /**
   * Get allocation
   * @return allocation
  **/
  @ApiModelProperty(value = "")
  public Double getAllocation() {
    return allocation;
  }

  public void setAllocation(Double allocation) {
    this.allocation = allocation;
  }

  public PortfolioPlanInsights gradingType(GradingType gradingType) {
    this.gradingType = gradingType;
    return this;
  }

   /**
   * Get gradingType
   * @return gradingType
  **/
  @ApiModelProperty(value = "")
  public GradingType getGradingType() {
    return gradingType;
  }

  public void setGradingType(GradingType gradingType) {
    this.gradingType = gradingType;
  }

  public PortfolioPlanInsights wiwo(Wiwo wiwo) {
    this.wiwo = wiwo;
    return this;
  }

   /**
   * Get wiwo
   * @return wiwo
  **/
  @ApiModelProperty(value = "")
  public Wiwo getWiwo() {
    return wiwo;
  }

  public void setWiwo(Wiwo wiwo) {
    this.wiwo = wiwo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortfolioPlanInsights portfolioPlanInsights = (PortfolioPlanInsights) o;
    return Objects.equals(this.portfolio, portfolioPlanInsights.portfolio) &&
        Objects.equals(this.subPortfolioInsights, portfolioPlanInsights.subPortfolioInsights) &&
        Objects.equals(this.insights, portfolioPlanInsights.insights) &&
        Objects.equals(this.statusInsights, portfolioPlanInsights.statusInsights) &&
        Objects.equals(this.budget, portfolioPlanInsights.budget) &&
        Objects.equals(this.allocation, portfolioPlanInsights.allocation) &&
        Objects.equals(this.gradingType, portfolioPlanInsights.gradingType) &&
        Objects.equals(this.wiwo, portfolioPlanInsights.wiwo) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolio, subPortfolioInsights, insights, statusInsights, budget, allocation, gradingType, wiwo, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortfolioPlanInsights {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    portfolio: ").append(toIndentedString(portfolio)).append("\n");
    sb.append("    subPortfolioInsights: ").append(toIndentedString(subPortfolioInsights)).append("\n");
    sb.append("    insights: ").append(toIndentedString(insights)).append("\n");
    sb.append("    statusInsights: ").append(toIndentedString(statusInsights)).append("\n");
    sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
    sb.append("    allocation: ").append(toIndentedString(allocation)).append("\n");
    sb.append("    gradingType: ").append(toIndentedString(gradingType)).append("\n");
    sb.append("    wiwo: ").append(toIndentedString(wiwo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

