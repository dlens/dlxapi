/*
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.decisionlens.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.decisionlens.client.model.ConstraintType;
import com.decisionlens.client.model.DlResource;
import com.decisionlens.client.model.Field;
import com.decisionlens.client.model.Portfolio;
import com.decisionlens.client.model.Projects;
import com.decisionlens.client.model.ValidConstraintValue;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Constraint
 */

public class Constraint extends DlResource {
  @SerializedName("type")
  private ConstraintType type = null;

  @SerializedName("isActive")
  private Boolean isActive = null;

  @SerializedName("percentage")
  private BigDecimal percentage = null;

  @SerializedName("fixedCost")
  private BigDecimal fixedCost = null;

  @SerializedName("field")
  private Field field = null;

  @SerializedName("projects")
  private Projects projects = null;

  @SerializedName("portfolio")
  private Portfolio portfolio = null;

  @SerializedName("validValues")
  private List<ValidConstraintValue> validValues = null;

  public Constraint type(ConstraintType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public ConstraintType getType() {
    return type;
  }

  public void setType(ConstraintType type) {
    this.type = type;
  }

  public Constraint isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public Constraint percentage(BigDecimal percentage) {
    this.percentage = percentage;
    return this;
  }

   /**
   * Get percentage
   * @return percentage
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getPercentage() {
    return percentage;
  }

  public void setPercentage(BigDecimal percentage) {
    this.percentage = percentage;
  }

  public Constraint fixedCost(BigDecimal fixedCost) {
    this.fixedCost = fixedCost;
    return this;
  }

   /**
   * Get fixedCost
   * @return fixedCost
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getFixedCost() {
    return fixedCost;
  }

  public void setFixedCost(BigDecimal fixedCost) {
    this.fixedCost = fixedCost;
  }

  public Constraint field(Field field) {
    this.field = field;
    return this;
  }

   /**
   * Get field
   * @return field
  **/
  @ApiModelProperty(value = "")
  public Field getField() {
    return field;
  }

  public void setField(Field field) {
    this.field = field;
  }

  public Constraint projects(Projects projects) {
    this.projects = projects;
    return this;
  }

   /**
   * Get projects
   * @return projects
  **/
  @ApiModelProperty(value = "")
  public Projects getProjects() {
    return projects;
  }

  public void setProjects(Projects projects) {
    this.projects = projects;
  }

  public Constraint portfolio(Portfolio portfolio) {
    this.portfolio = portfolio;
    return this;
  }

   /**
   * Get portfolio
   * @return portfolio
  **/
  @ApiModelProperty(value = "")
  public Portfolio getPortfolio() {
    return portfolio;
  }

  public void setPortfolio(Portfolio portfolio) {
    this.portfolio = portfolio;
  }

  public Constraint validValues(List<ValidConstraintValue> validValues) {
    this.validValues = validValues;
    return this;
  }

  public Constraint addValidValuesItem(ValidConstraintValue validValuesItem) {
    if (this.validValues == null) {
      this.validValues = new ArrayList<ValidConstraintValue>();
    }
    this.validValues.add(validValuesItem);
    return this;
  }

   /**
   * Get validValues
   * @return validValues
  **/
  @ApiModelProperty(value = "")
  public List<ValidConstraintValue> getValidValues() {
    return validValues;
  }

  public void setValidValues(List<ValidConstraintValue> validValues) {
    this.validValues = validValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Constraint constraint = (Constraint) o;
    return Objects.equals(this.type, constraint.type) &&
        Objects.equals(this.isActive, constraint.isActive) &&
        Objects.equals(this.percentage, constraint.percentage) &&
        Objects.equals(this.fixedCost, constraint.fixedCost) &&
        Objects.equals(this.field, constraint.field) &&
        Objects.equals(this.projects, constraint.projects) &&
        Objects.equals(this.portfolio, constraint.portfolio) &&
        Objects.equals(this.validValues, constraint.validValues) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, isActive, percentage, fixedCost, field, projects, portfolio, validValues, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Constraint {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    fixedCost: ").append(toIndentedString(fixedCost)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    portfolio: ").append(toIndentedString(portfolio)).append("\n");
    sb.append("    validValues: ").append(toIndentedString(validValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

