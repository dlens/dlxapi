/*
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.decisionlens.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ActivityType
 */
@JsonAdapter(ActivityType.Adapter.class)
public enum ActivityType {
  
  FIELDCREATEDEVENT("FieldCreatedEvent"),
  
  FIELDDATATYPEUPDATEDEVENT("FieldDataTypeUpdatedEvent"),
  
  FIELDDELETEDEVENT("FieldDeletedEvent"),
  
  FIELDNAMEUPDATEDEVENT("FieldNameUpdatedEvent"),
  
  FIELDTYPEPOSITIONUPDATEDEVENT("FieldTypePositionUpdatedEvent"),
  
  FIELDPOSITIONUPDATEDEVENT("FieldPositionUpdatedEvent"),
  
  FIELDTARGETTYPEUPDATEDEVENT("FieldTargetTypeUpdatedEvent"),
  
  FIELDTYPEUPDATEDEVENT("FieldTypeUpdatedEvent"),
  
  FIELDISFIELDTYPEAPPROVEDUPDATEDEVENT("FieldIsFieldTypeApprovedUpdatedEvent"),
  
  PORTFOLIOARCHIVEDEVENT("PortfolioArchivedEvent"),
  
  PORTFOLIOCREATEDEVENT("PortfolioCreatedEvent"),
  
  PORTFOLIONAMEUPDATEDEVENT("PortfolioNameUpdatedEvent"),
  
  SUBPORTFOLIOADDEDEVENT("SubPortfolioAddedEvent"),
  
  SUBPORTFOLIOREMOVEDEVENT("SubPortfolioRemovedEvent"),
  
  PORTFOLIOPLANCREATEDEVENT("PortfolioPlanCreatedEvent"),
  
  PORTFOLIOPLANDELETEDEVENT("PortfolioPlanDeletedEvent"),
  
  PORTFOLIOPLANUSERCREATEDEVENT("PortfolioPlanUserCreatedEvent"),
  
  PORTFOLIOPLANUSERPERMISSIONSUPDATEDEVENT("PortfolioPlanUserPermissionsUpdatedEvent"),
  
  PORTFOLIOPLANUSERROLESUPDATEDEVENT("PortfolioPlanUserRolesUpdatedEvent"),
  
  PORTFOLIOPLANUSERDELETEDEVENT("PortfolioPlanUserDeletedEvent"),
  
  PROJECTCREATEDEVENT("ProjectCreatedEvent"),
  
  PROJECTDELETEDEVENT("ProjectDeletedEvent"),
  
  PROJECTFIELDVALUEDELETEDEVENT("ProjectFieldValueDeletedEvent"),
  
  PROJECTFIELDVALUEUPDATEDEVENT("ProjectFieldValueUpdatedEvent"),
  
  PROJECTPORTFOLIOPLANFIELDVALUESCOPIEDEVENT("ProjectPortfolioPlanFieldValuesCopiedEvent"),
  
  PROJECTPORTFOLIOPLANFIELDVALUEUPDATEDEVENT("ProjectPortfolioPlanFieldValueUpdatedEvent"),
  
  PROJECTPORTFOLIOPLANFIELDVALUEDELETEDEVENT("ProjectPortfolioPlanFieldValueDeletedEvent"),
  
  PROJECTPORTFOLIOPLANDELETEDEVENT("ProjectPortfolioPlanDeletedEvent"),
  
  PROJECTPORTFOLIOPLANISDRAFTUPDATEDEVENT("ProjectPortfolioPlanIsDraftUpdatedEvent"),
  
  RESOURCEPOOLBUDGETAMOUNTUPDATEDEVENT("ResourcePoolBudgetAmountUpdatedEvent"),
  
  RESOURCEPOOLCREATEDEVENT("ResourcePoolCreatedEvent"),
  
  RESOURCEPOOLNAMEUPDATEDEVENT("ResourcePoolNameUpdatedEvent"),
  
  RESOURCEPOOLDELETEDEVENT("ResourcePoolDeletedEvent"),
  
  SOURCECREATEDEVENT("SourceCreatedEvent"),
  
  SOURCEDELETEDEVENT("SourceDeletedEvent"),
  
  SOURCENAMEUPDATEDEVENT("SourceNameUpdatedEvent"),
  
  USERADDEDEVENT("UserAddedEvent"),
  
  USERAPPROVALADDEDEVENT("UserApprovalAddedEvent"),
  
  USERAUTHENTICATEDEVENT("UserAuthenticatedEvent"),
  
  USERGROUPADDEDEVENT("UserGroupAddedEvent"),
  
  AUTHORIZATIONCODEGENERATEDEVENT("AuthorizationCodeGeneratedEvent"),
  
  ACCESSTOKENGENERATEDEVENT("AccessTokenGeneratedEvent"),
  
  PLANCREATEDEVENT("PlanCreatedEvent"),
  
  PLANDELETEDEVENT("PlanDeletedEvent"),
  
  PLANGENERATEDEVENT("PlanGeneratedEvent"),
  
  PLANNAMEUPDATEDEVENT("PlanNameUpdatedEvent"),
  
  PLANCOPIEDEVENT("PlanCopiedEvent"),
  
  PLANPROJECTFUNDINGUPDATEDEVENT("PlanProjectFundingUpdatedEvent"),
  
  PLANTYPEUPDATEDEVENT("PlanTypeUpdatedEvent"),
  
  PLANCOMPARISONCREATEDEVENT("PlanComparisonCreatedEvent"),
  
  PLANCOMPARISONNAMEUPDATEDEVENT("PlanComparisonNameUpdatedEvent"),
  
  PLANCOMPARISONPLANSUPDATEDEVENT("PlanComparisonPlansUpdatedEvent"),
  
  PORTFOLIOPLANNAMEUPDATEDEVENT("PortfolioPlanNameUpdatedEvent"),
  
  PORTFOLIOPLANDESCRIPTIONUPDATEDEVENT("PortfolioPlanDescriptionUpdatedEvent"),
  
  PORTFOLIOTIMEINTERVALUPDATEDEVENT("PortfolioTimeIntervalUpdatedEvent"),
  
  PORTFOLIOPLANREBASELINEDEVENT("PortfolioPlanRebaselinedEvent"),
  
  PORTFOLIOPLANDATAIMPORTEDEVENT("PortfolioPlanDataImportedEvent"),
  
  PROJECTCONTRIBUTINGUSERIDSUPDATEDEVENT("ProjectContributingUserIdsUpdatedEvent"),
  
  PORTFOLIOPLANUSERCONTRIBUTINGPROJECTIDSUPDATEDEVENT("PortfolioPlanUserContributingProjectIdsUpdatedEvent"),
  
  COMMENTADDEDEVENT("CommentAddedEvent"),
  
  COMMENTEDITEDEVENT("CommentEditedEvent"),
  
  COMMENTDELETEDEVENT("CommentDeletedEvent");

  private String value;

  ActivityType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ActivityType fromValue(String text) {
    for (ActivityType b : ActivityType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<ActivityType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ActivityType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ActivityType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ActivityType.fromValue(String.valueOf(value));
    }
  }
}

