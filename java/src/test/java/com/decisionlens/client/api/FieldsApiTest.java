/*
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.decisionlens.client.api;

import com.decisionlens.client.ApiException;
import com.decisionlens.client.model.ErrorResponse;
import com.decisionlens.client.model.Field;
import com.decisionlens.client.model.Fields;
import com.decisionlens.client.model.Operations;
import com.decisionlens.client.model.PatchItem;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FieldsApi
 */
@Ignore
public class FieldsApiTest {

    private final FieldsApi api = new FieldsApi();

    
    /**
     * Creates a new field in a portfolio.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createFieldTest() throws ApiException {
        Field body = null;
        String expand = null;
        List<Field> response = api.createField(body, expand);

        // TODO: test validations
    }
    
    /**
     * Delete a field. Also deletes the values for every project.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFieldTest() throws ApiException {
        String id = null;
        api.deleteField(id);

        // TODO: test validations
    }
    
    /**
     * Retrieves a field.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFieldTest() throws ApiException {
        String id = null;
        String expand = null;
        Field response = api.getField(id, expand);

        // TODO: test validations
    }
    
    /**
     * Retrieves fields for a portfolio.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFieldsForPortfolioTest() throws ApiException {
        String portfolioId = null;
        String expand = null;
        Integer limit = null;
        Integer offset = null;
        String orderBy = null;
        String match = null;
        Fields response = api.getFieldsForPortfolio(portfolioId, expand, limit, offset, orderBy, match);

        // TODO: test validations
    }
    
    /**
     * Updates a field utilizing JSON Patch Operations. If the update logic makes changes to other fields, all updated fields will be returned in the response. 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateFieldTest() throws ApiException {
        String id = null;
        Operations body = null;
        String expand = null;
        List<Field> response = api.updateField(id, body, expand);

        // TODO: test validations
    }
    
    /**
     * Update fields associated with a portfolio.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateFieldsTest() throws ApiException {
        List<PatchItem> body = null;
        String expand = null;
        List<Field> response = api.updateFields(body, expand);

        // TODO: test validations
    }
    
}
