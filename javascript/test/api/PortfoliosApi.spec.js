/**
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DecisionLensApi);
  }
}(this, function(expect, DecisionLensApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DecisionLensApi.PortfoliosApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PortfoliosApi', function() {
    describe('archivePortfolio', function() {
      it('should call archivePortfolio successfully', function(done) {
        //uncomment below and update the code to test archivePortfolio
        //instance.archivePortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPortfolio', function() {
      it('should call createPortfolio successfully', function(done) {
        //uncomment below and update the code to test createPortfolio
        //instance.createPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadSpreadsheetTemplate', function() {
      it('should call downloadSpreadsheetTemplate successfully', function(done) {
        //uncomment below and update the code to test downloadSpreadsheetTemplate
        //instance.downloadSpreadsheetTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportPortfolioData', function() {
      it('should call exportPortfolioData successfully', function(done) {
        //uncomment below and update the code to test exportPortfolioData
        //instance.exportPortfolioData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolio', function() {
      it('should call getPortfolio successfully', function(done) {
        //uncomment below and update the code to test getPortfolio
        //instance.getPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioActivities', function() {
      it('should call getPortfolioActivities successfully', function(done) {
        //uncomment below and update the code to test getPortfolioActivities
        //instance.getPortfolioActivities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioResourcePools', function() {
      it('should call getPortfolioResourcePools successfully', function(done) {
        //uncomment below and update the code to test getPortfolioResourcePools
        //instance.getPortfolioResourcePools(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolios', function() {
      it('should call getPortfolios successfully', function(done) {
        //uncomment below and update the code to test getPortfolios
        //instance.getPortfolios(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProjectsForPortfolio', function() {
      it('should call getProjectsForPortfolio successfully', function(done) {
        //uncomment below and update the code to test getProjectsForPortfolio
        //instance.getProjectsForPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpreadsheetReportForPortfolio', function() {
      it('should call getSpreadsheetReportForPortfolio successfully', function(done) {
        //uncomment below and update the code to test getSpreadsheetReportForPortfolio
        //instance.getSpreadsheetReportForPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importPortfolioData', function() {
      it('should call importPortfolioData successfully', function(done) {
        //uncomment below and update the code to test importPortfolioData
        //instance.importPortfolioData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('regenerateUserRegistrationToken', function() {
      it('should call regenerateUserRegistrationToken successfully', function(done) {
        //uncomment below and update the code to test regenerateUserRegistrationToken
        //instance.regenerateUserRegistrationToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveSpreadsheetForPortfolio', function() {
      it('should call saveSpreadsheetForPortfolio successfully', function(done) {
        //uncomment below and update the code to test saveSpreadsheetForPortfolio
        //instance.saveSpreadsheetForPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveSpreadsheetSourceForPortfolio', function() {
      it('should call saveSpreadsheetSourceForPortfolio successfully', function(done) {
        //uncomment below and update the code to test saveSpreadsheetSourceForPortfolio
        //instance.saveSpreadsheetSourceForPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setCustomNames', function() {
      it('should call setCustomNames successfully', function(done) {
        //uncomment below and update the code to test setCustomNames
        //instance.setCustomNames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolio', function() {
      it('should call updatePortfolio successfully', function(done) {
        //uncomment below and update the code to test updatePortfolio
        //instance.updatePortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolioFieldValues', function() {
      it('should call updatePortfolioFieldValues successfully', function(done) {
        //uncomment below and update the code to test updatePortfolioFieldValues
        //instance.updatePortfolioFieldValues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolioResourcePoolBudgetAmounts', function() {
      it('should call updatePortfolioResourcePoolBudgetAmounts successfully', function(done) {
        //uncomment below and update the code to test updatePortfolioResourcePoolBudgetAmounts
        //instance.updatePortfolioResourcePoolBudgetAmounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
