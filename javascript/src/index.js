/**
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessTokenGeneratedEvent', 'model/ActivityType', 'model/AddUserRequest', 'model/AddUsersRequest', 'model/AddedToPortfolioMessagePayload', 'model/AddedToPortfolioPlanMessagePayload', 'model/AttachmentCreatedEvent', 'model/AttachmentDeletedEvent', 'model/AttachmentNameUpdatedEvent', 'model/AttachmentUpdatedMessagePayload', 'model/Attributes', 'model/AuthorizationCodeGeneratedEvent', 'model/BalanceFieldDetail', 'model/BudgetAllocation', 'model/BudgetFieldCreatedMessagePayload', 'model/BudgetFieldsDeletedMessagePayload', 'model/BudgetFieldsUpdatedMessagePayload', 'model/CalculationType', 'model/CategorizationInsight', 'model/CategoryDisplayOrder', 'model/CategoryOptionAddedMessagePayload', 'model/CategoryOptionCreatedEvent', 'model/CategoryOptionDeletedEvent', 'model/CategoryOptionDeletedMessagePayload', 'model/CategoryOptionNameUpdatedEvent', 'model/CategoryOptionPositionUpdatedEvent', 'model/CategoryOptionUpdatedMessagePayload', 'model/Classification', 'model/Column', 'model/ColumnType', 'model/CommentAddedEvent', 'model/CommentAddedMessagePayload', 'model/CommentDeletedEvent', 'model/CommentDeletedMessagePayload', 'model/CommentEditedEvent', 'model/CommentEditedMessagePayload', 'model/CostBudgetAllocation', 'model/Currency', 'model/CustomName', 'model/CustomNameAddedEvent', 'model/CustomNameDeletedEvent', 'model/CustomNameGroupType', 'model/CustomNameType', 'model/CustomNameUpdatedEvent', 'model/CustomNamesUpdatedMessagePayload', 'model/DLCGroup', 'model/DLIApplication', 'model/DataFormats', 'model/DataType', 'model/DataUpdatedMessagePayload', 'model/DlCollection', 'model/DlResource', 'model/DlcPortfolio', 'model/DraftProjectsSubmittedMessagePayload', 'model/ErrorResponse', 'model/ExpandComponent', 'model/ExportConfig', 'model/ExportFormatType', 'model/ExportType', 'model/FieldAttributes', 'model/FieldAttributesCategoryDisplayOrderUpdatedEvent', 'model/FieldAttributesDataFormatsCurrencyUpdatedEvent', 'model/FieldAttributesDataFormatsDecimalPlacesUpdatedEvent', 'model/FieldAttributesDataFormatsNegativesUpdatedEvent', 'model/FieldAttributesPlanningWindowEndUpdatedEvent', 'model/FieldAttributesPlanningWindowStartUpdatedEvent', 'model/FieldCalculationTypeUpdatedEvent', 'model/FieldCategoryOptionsUpdatedEvent', 'model/FieldCreatedEvent', 'model/FieldCreatedMessagePayload', 'model/FieldDataTypeUpdatedEvent', 'model/FieldDeletedEvent', 'model/FieldDescriptionUpdatedEvent', 'model/FieldGrade', 'model/FieldIdeaFieldPositionUpdatedEvent', 'model/FieldInsight', 'model/FieldIsAutoScaleUpdatedEvent', 'model/FieldIsFieldTypeApprovedUpdatedEvent', 'model/FieldIsIdeaFieldRequiredUpdatedEvent', 'model/FieldIsIdeaFieldUpdatedEvent', 'model/FieldNameUpdatedEvent', 'model/FieldPositionUpdatedEvent', 'model/FieldTagAddedEvent', 'model/FieldTagRemovedEvent', 'model/FieldTargetTypeUpdatedEvent', 'model/FieldType', 'model/FieldTypePositionUpdatedEvent', 'model/FieldTypeUpdatedEvent', 'model/FieldValue', 'model/FieldValuePatchItem', 'model/FieldValuesCollectionInfo', 'model/FieldValuesProjectDeletedMessagePayload', 'model/FieldValuesUpdatedMessagePayload', 'model/FieldWeight', 'model/FieldsDeletedMessagePayload', 'model/FieldsUpdatedMessagePayload', 'model/Filter', 'model/FilterType', 'model/Goal', 'model/GoalAddedEvent', 'model/GoalDeletedEvent', 'model/GoalUpdatedEvent', 'model/GoalsUpdatedMessagePayload', 'model/Grade', 'model/GradingType', 'model/Header', 'model/IdeaFormFieldRequest', 'model/ImportType', 'model/Insight', 'model/InsightType', 'model/JiraComment', 'model/KloudlessFile', 'model/LikertScaleFieldInsight', 'model/LikertScaleInsight', 'model/LikertScaleType', 'model/Mail', 'model/MappedProject', 'model/Mappings', 'model/Message', 'model/MessageDestinationType', 'model/MessageToken', 'model/MessageType', 'model/MinifiedFieldValue', 'model/MinifiedProject', 'model/MinifiedProjects', 'model/MinifiedYearlyFieldValue', 'model/Negatives', 'model/NotificationsMessagePayload', 'model/Operation', 'model/OperationType', 'model/Operations', 'model/PatchItem', 'model/Permission', 'model/PermissionType', 'model/PlanType', 'model/PlanningPeriod', 'model/PlanningWindow', 'model/PortfolioArchivedEvent', 'model/PortfolioArchivedMessagePayload', 'model/PortfolioBudgetTimePeriodTypeUpdatedEvent', 'model/PortfolioCreatedEvent', 'model/PortfolioIsMonthlySpendPlanUpdatedEvent', 'model/PortfolioNameUpdatedEvent', 'model/PortfolioPlanCreatedEvent', 'model/PortfolioPlanDataImportedEvent', 'model/PortfolioPlanDeletedEvent', 'model/PortfolioPlanDescriptionUpdatedEvent', 'model/PortfolioPlanGrade', 'model/PortfolioPlanNameUpdatedEvent', 'model/PortfolioPlanRebaselinedEvent', 'model/PortfolioPlanUserCreatedMessagePayload', 'model/PortfolioPlanUserCreatedV2Event', 'model/PortfolioPlanUserDeletedEvent', 'model/PortfolioPlanUserDeletedMessagePayload', 'model/PortfolioPlanUserDraftProjectIdsUpdatedEvent', 'model/PortfolioPlanUserFieldPermissionsUpdatedEvent', 'model/PortfolioPlanUserProjectPermissionsUpdatedEvent', 'model/PortfolioPlanUserRole', 'model/PortfolioPlanUserRolesUpdatedNewEvent', 'model/PortfolioPlanUserUpdatedMessagePayload', 'model/PortfolioPlanWithProjects', 'model/PortfolioPlansUpdatedMessagePayload', 'model/PortfolioPlansWithProjects', 'model/PortfolioProjectsCreatedEvent', 'model/PortfolioProjectsUpdatedEvent', 'model/PortfolioScoreWeightsUpdatedEvent', 'model/PortfolioTimeIntervalUpdatedEvent', 'model/PortfolioUpdatedMessagePayload', 'model/PortfolioUserRegistrationTokenUpdatedEvent', 'model/ProjectAccessGrantedMessagePayload', 'model/ProjectAccessRevokedMessagePayload', 'model/ProjectAttachmentAddedEvent', 'model/ProjectAttachmentAddedMessagePayload', 'model/ProjectAttachmentRemovedEvent', 'model/ProjectAttachmentRemovedMessagePayload', 'model/ProjectContributingUserAddedEvent', 'model/ProjectContributingUserDeletedEvent', 'model/ProjectContributorsUpdatedMessagePayload', 'model/ProjectCreatedEvent', 'model/ProjectDeletedEvent', 'model/ProjectDependenciesUpdatedMessagePayload', 'model/ProjectDependsOnAddedEvent', 'model/ProjectDependsOnRemovedEvent', 'model/ProjectFieldValue', 'model/ProjectFieldValueDeletedEvent', 'model/ProjectFieldValueUpdatedEvent', 'model/ProjectFieldValuesDeletedEvent', 'model/ProjectPortfolioPlanDeletedEvent', 'model/ProjectPortfolioPlanFieldValueDeletedEvent', 'model/ProjectPortfolioPlanFieldValueUpdatedEvent', 'model/ProjectPortfolioPlanFieldValuesCopiedEvent', 'model/ProjectPortfolioPlanIsDraftUpdatedEvent', 'model/ProjectScoresUpdatedMessagePayload', 'model/ProjectSummary', 'model/ProjectTagAddedEvent', 'model/ProjectTagRemovedEvent', 'model/ProjectsCreatedMessagePayload', 'model/ProjectsDeletedMessagePayload', 'model/Property', 'model/PropertyName', 'model/ProvisionGroupRequest', 'model/ProvisionGroupResponse', 'model/Recommendation', 'model/RecommendationType', 'model/RegisterUserRequest', 'model/RemoveContributingUsersRequest', 'model/RemovedFromPortfolioMessagePayload', 'model/RemovedFromPortfolioPlanMessagePayload', 'model/ResourcePoolBudgetAmount', 'model/ResourcePoolBudgetAmountPatchItem', 'model/ResourcePoolBudgetAmountUpdatedEvent', 'model/ResourcePoolCreatedEvent', 'model/ResourcePoolDeletedEvent', 'model/ResourcePoolFieldValuePatchItem', 'model/ResourcePoolFieldValueUpdatedEvent', 'model/ResourcePoolFieldValuesUpdatedMessagePayload', 'model/ResourcePoolNameUpdatedEvent', 'model/ResourcePoolPlanBudgetAmountUpdatedEvent', 'model/ResourcePoolPlanBudgetCopiedEvent', 'model/ResourcePoolsCreatedMessagePayload', 'model/ResourcePoolsDeletedMessagePayload', 'model/ResourcePoolsUpdatedMessagePayload', 'model/RiskFieldDetail', 'model/RiskType', 'model/RoleType', 'model/Row', 'model/Scale', 'model/ScalePoint', 'model/ScalePointAutoScaleValueUpdatedEvent', 'model/ScalePointAutoValueUpdatedEvent', 'model/ScalePointCreatedEvent', 'model/ScalePointDeletedEvent', 'model/ScalePointManualScaleValueUpdatedEvent', 'model/ScalePointManualValueUpdatedEvent', 'model/ScalePointNameUpdatedEvent', 'model/ScalePointProjectUpdatedEvent', 'model/SchedulingCriteria', 'model/Schema', 'model/ScoreWeightCreatedEvent', 'model/ScoreWeightDeletedEvent', 'model/ScoreWeightFieldWeightCreatedEvent', 'model/ScoreWeightFieldWeightDeletedEvent', 'model/ScoreWeightFieldWeightLockUpdatedEvent', 'model/ScoreWeightFieldWeightValueUpdatedEvent', 'model/ScoreWeightNameUpdatedEvent', 'model/ScoreWeightsUpdatedMessagePayload', 'model/SetDependenciesRequest', 'model/Sheet', 'model/SourceCreatedEvent', 'model/SourceDeletedEvent', 'model/SourceNameUpdatedEvent', 'model/SourceType', 'model/SpreadsheetReport', 'model/SpreadsheetReportProgress', 'model/SpreadsheetReportProgressMessagePayload', 'model/SpreadsheetReportProgressStatus', 'model/SubPortfolioAddedEvent', 'model/SubPortfolioRemovedEvent', 'model/TagAddedMessagePayload', 'model/TagColorUpdatedEvent', 'model/TagCreatedEvent', 'model/TagDeletedEvent', 'model/TagDeletedMessagePayload', 'model/TagNameUpdatedEvent', 'model/TagParentUpdatedEvent', 'model/TagUpdatedMessagePayload', 'model/TargetType', 'model/TemplateProperty', 'model/TimeInterval', 'model/TimePeriod', 'model/TimePeriodType', 'model/ToastMessagePayload', 'model/UserActivityTimestamp', 'model/UserActivityTimestamps', 'model/UserAddedEvent', 'model/UserApprovalAddedEvent', 'model/UserAuthenticatedEvent', 'model/UserGroupAddedEvent', 'model/UserRegistrationToken', 'model/UserStatus', 'model/ValueCount', 'model/ValueInsights', 'model/Warnings', 'model/WhatsIn', 'model/Wiwo', 'model/Activities', 'model/Activity', 'model/Attachment', 'model/Attachments', 'model/BudgetAllocations', 'model/CategoryOption', 'model/CategoryOptions', 'model/Classifications', 'model/Comment', 'model/Comments', 'model/CustomNames', 'model/Field', 'model/FieldGrades', 'model/FieldValues', 'model/Fields', 'model/FileAttachment', 'model/Goals', 'model/Group', 'model/Groups', 'model/JiraFieldMapping', 'model/JiraFieldMappings', 'model/JiraInstance', 'model/Mapping', 'model/Permissions', 'model/PlanGrade', 'model/Portfolio', 'model/PortfolioPlan', 'model/PortfolioPlanGrades', 'model/PortfolioPlanInsights', 'model/PortfolioPlanUser', 'model/PortfolioPlanUsers', 'model/PortfolioPlans', 'model/Portfolios', 'model/Project', 'model/Projects', 'model/Properties', 'model/Recommendations', 'model/ResourcePool', 'model/ResourcePoolBudgetAmounts', 'model/ResourcePoolFieldValue', 'model/ResourcePools', 'model/ScoreWeight', 'model/ScoreWeights', 'model/Sheets', 'model/Source', 'model/Spreadsheet', 'model/Tag', 'model/Tags', 'model/User', 'model/Users', 'model/ValueCounts', 'api/ActivitiesApi', 'api/ApiActivityApi', 'api/AttachmentsApi', 'api/BudgetFieldsApi', 'api/ClassificationApi', 'api/CommentsApi', 'api/DefaultApi', 'api/FieldsApi', 'api/GoalsApi', 'api/GroupsApi', 'api/JiraApi', 'api/LogoutApi', 'api/MailApi', 'api/MappingsApi', 'api/MessageTokensApi', 'api/MessagesApi', 'api/NotificationsApi', 'api/PlansApi', 'api/PodsApi', 'api/PortfolioPlanUsersApi', 'api/PortfolioPlansApi', 'api/PortfoliosApi', 'api/ProjectsApi', 'api/PropertiesApi', 'api/RegistrationApi', 'api/ReportsApi', 'api/ResourcePoolsApi', 'api/ScoreWeightsApi', 'api/SourcesApi', 'api/SpreadsheetApi', 'api/TagsApi', 'api/UserApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessTokenGeneratedEvent'), require('./model/ActivityType'), require('./model/AddUserRequest'), require('./model/AddUsersRequest'), require('./model/AddedToPortfolioMessagePayload'), require('./model/AddedToPortfolioPlanMessagePayload'), require('./model/AttachmentCreatedEvent'), require('./model/AttachmentDeletedEvent'), require('./model/AttachmentNameUpdatedEvent'), require('./model/AttachmentUpdatedMessagePayload'), require('./model/Attributes'), require('./model/AuthorizationCodeGeneratedEvent'), require('./model/BalanceFieldDetail'), require('./model/BudgetAllocation'), require('./model/BudgetFieldCreatedMessagePayload'), require('./model/BudgetFieldsDeletedMessagePayload'), require('./model/BudgetFieldsUpdatedMessagePayload'), require('./model/CalculationType'), require('./model/CategorizationInsight'), require('./model/CategoryDisplayOrder'), require('./model/CategoryOptionAddedMessagePayload'), require('./model/CategoryOptionCreatedEvent'), require('./model/CategoryOptionDeletedEvent'), require('./model/CategoryOptionDeletedMessagePayload'), require('./model/CategoryOptionNameUpdatedEvent'), require('./model/CategoryOptionPositionUpdatedEvent'), require('./model/CategoryOptionUpdatedMessagePayload'), require('./model/Classification'), require('./model/Column'), require('./model/ColumnType'), require('./model/CommentAddedEvent'), require('./model/CommentAddedMessagePayload'), require('./model/CommentDeletedEvent'), require('./model/CommentDeletedMessagePayload'), require('./model/CommentEditedEvent'), require('./model/CommentEditedMessagePayload'), require('./model/CostBudgetAllocation'), require('./model/Currency'), require('./model/CustomName'), require('./model/CustomNameAddedEvent'), require('./model/CustomNameDeletedEvent'), require('./model/CustomNameGroupType'), require('./model/CustomNameType'), require('./model/CustomNameUpdatedEvent'), require('./model/CustomNamesUpdatedMessagePayload'), require('./model/DLCGroup'), require('./model/DLIApplication'), require('./model/DataFormats'), require('./model/DataType'), require('./model/DataUpdatedMessagePayload'), require('./model/DlCollection'), require('./model/DlResource'), require('./model/DlcPortfolio'), require('./model/DraftProjectsSubmittedMessagePayload'), require('./model/ErrorResponse'), require('./model/ExpandComponent'), require('./model/ExportConfig'), require('./model/ExportFormatType'), require('./model/ExportType'), require('./model/FieldAttributes'), require('./model/FieldAttributesCategoryDisplayOrderUpdatedEvent'), require('./model/FieldAttributesDataFormatsCurrencyUpdatedEvent'), require('./model/FieldAttributesDataFormatsDecimalPlacesUpdatedEvent'), require('./model/FieldAttributesDataFormatsNegativesUpdatedEvent'), require('./model/FieldAttributesPlanningWindowEndUpdatedEvent'), require('./model/FieldAttributesPlanningWindowStartUpdatedEvent'), require('./model/FieldCalculationTypeUpdatedEvent'), require('./model/FieldCategoryOptionsUpdatedEvent'), require('./model/FieldCreatedEvent'), require('./model/FieldCreatedMessagePayload'), require('./model/FieldDataTypeUpdatedEvent'), require('./model/FieldDeletedEvent'), require('./model/FieldDescriptionUpdatedEvent'), require('./model/FieldGrade'), require('./model/FieldIdeaFieldPositionUpdatedEvent'), require('./model/FieldInsight'), require('./model/FieldIsAutoScaleUpdatedEvent'), require('./model/FieldIsFieldTypeApprovedUpdatedEvent'), require('./model/FieldIsIdeaFieldRequiredUpdatedEvent'), require('./model/FieldIsIdeaFieldUpdatedEvent'), require('./model/FieldNameUpdatedEvent'), require('./model/FieldPositionUpdatedEvent'), require('./model/FieldTagAddedEvent'), require('./model/FieldTagRemovedEvent'), require('./model/FieldTargetTypeUpdatedEvent'), require('./model/FieldType'), require('./model/FieldTypePositionUpdatedEvent'), require('./model/FieldTypeUpdatedEvent'), require('./model/FieldValue'), require('./model/FieldValuePatchItem'), require('./model/FieldValuesCollectionInfo'), require('./model/FieldValuesProjectDeletedMessagePayload'), require('./model/FieldValuesUpdatedMessagePayload'), require('./model/FieldWeight'), require('./model/FieldsDeletedMessagePayload'), require('./model/FieldsUpdatedMessagePayload'), require('./model/Filter'), require('./model/FilterType'), require('./model/Goal'), require('./model/GoalAddedEvent'), require('./model/GoalDeletedEvent'), require('./model/GoalUpdatedEvent'), require('./model/GoalsUpdatedMessagePayload'), require('./model/Grade'), require('./model/GradingType'), require('./model/Header'), require('./model/IdeaFormFieldRequest'), require('./model/ImportType'), require('./model/Insight'), require('./model/InsightType'), require('./model/JiraComment'), require('./model/KloudlessFile'), require('./model/LikertScaleFieldInsight'), require('./model/LikertScaleInsight'), require('./model/LikertScaleType'), require('./model/Mail'), require('./model/MappedProject'), require('./model/Mappings'), require('./model/Message'), require('./model/MessageDestinationType'), require('./model/MessageToken'), require('./model/MessageType'), require('./model/MinifiedFieldValue'), require('./model/MinifiedProject'), require('./model/MinifiedProjects'), require('./model/MinifiedYearlyFieldValue'), require('./model/Negatives'), require('./model/NotificationsMessagePayload'), require('./model/Operation'), require('./model/OperationType'), require('./model/Operations'), require('./model/PatchItem'), require('./model/Permission'), require('./model/PermissionType'), require('./model/PlanType'), require('./model/PlanningPeriod'), require('./model/PlanningWindow'), require('./model/PortfolioArchivedEvent'), require('./model/PortfolioArchivedMessagePayload'), require('./model/PortfolioBudgetTimePeriodTypeUpdatedEvent'), require('./model/PortfolioCreatedEvent'), require('./model/PortfolioIsMonthlySpendPlanUpdatedEvent'), require('./model/PortfolioNameUpdatedEvent'), require('./model/PortfolioPlanCreatedEvent'), require('./model/PortfolioPlanDataImportedEvent'), require('./model/PortfolioPlanDeletedEvent'), require('./model/PortfolioPlanDescriptionUpdatedEvent'), require('./model/PortfolioPlanGrade'), require('./model/PortfolioPlanNameUpdatedEvent'), require('./model/PortfolioPlanRebaselinedEvent'), require('./model/PortfolioPlanUserCreatedMessagePayload'), require('./model/PortfolioPlanUserCreatedV2Event'), require('./model/PortfolioPlanUserDeletedEvent'), require('./model/PortfolioPlanUserDeletedMessagePayload'), require('./model/PortfolioPlanUserDraftProjectIdsUpdatedEvent'), require('./model/PortfolioPlanUserFieldPermissionsUpdatedEvent'), require('./model/PortfolioPlanUserProjectPermissionsUpdatedEvent'), require('./model/PortfolioPlanUserRole'), require('./model/PortfolioPlanUserRolesUpdatedNewEvent'), require('./model/PortfolioPlanUserUpdatedMessagePayload'), require('./model/PortfolioPlanWithProjects'), require('./model/PortfolioPlansUpdatedMessagePayload'), require('./model/PortfolioPlansWithProjects'), require('./model/PortfolioProjectsCreatedEvent'), require('./model/PortfolioProjectsUpdatedEvent'), require('./model/PortfolioScoreWeightsUpdatedEvent'), require('./model/PortfolioTimeIntervalUpdatedEvent'), require('./model/PortfolioUpdatedMessagePayload'), require('./model/PortfolioUserRegistrationTokenUpdatedEvent'), require('./model/ProjectAccessGrantedMessagePayload'), require('./model/ProjectAccessRevokedMessagePayload'), require('./model/ProjectAttachmentAddedEvent'), require('./model/ProjectAttachmentAddedMessagePayload'), require('./model/ProjectAttachmentRemovedEvent'), require('./model/ProjectAttachmentRemovedMessagePayload'), require('./model/ProjectContributingUserAddedEvent'), require('./model/ProjectContributingUserDeletedEvent'), require('./model/ProjectContributorsUpdatedMessagePayload'), require('./model/ProjectCreatedEvent'), require('./model/ProjectDeletedEvent'), require('./model/ProjectDependenciesUpdatedMessagePayload'), require('./model/ProjectDependsOnAddedEvent'), require('./model/ProjectDependsOnRemovedEvent'), require('./model/ProjectFieldValue'), require('./model/ProjectFieldValueDeletedEvent'), require('./model/ProjectFieldValueUpdatedEvent'), require('./model/ProjectFieldValuesDeletedEvent'), require('./model/ProjectPortfolioPlanDeletedEvent'), require('./model/ProjectPortfolioPlanFieldValueDeletedEvent'), require('./model/ProjectPortfolioPlanFieldValueUpdatedEvent'), require('./model/ProjectPortfolioPlanFieldValuesCopiedEvent'), require('./model/ProjectPortfolioPlanIsDraftUpdatedEvent'), require('./model/ProjectScoresUpdatedMessagePayload'), require('./model/ProjectSummary'), require('./model/ProjectTagAddedEvent'), require('./model/ProjectTagRemovedEvent'), require('./model/ProjectsCreatedMessagePayload'), require('./model/ProjectsDeletedMessagePayload'), require('./model/Property'), require('./model/PropertyName'), require('./model/ProvisionGroupRequest'), require('./model/ProvisionGroupResponse'), require('./model/Recommendation'), require('./model/RecommendationType'), require('./model/RegisterUserRequest'), require('./model/RemoveContributingUsersRequest'), require('./model/RemovedFromPortfolioMessagePayload'), require('./model/RemovedFromPortfolioPlanMessagePayload'), require('./model/ResourcePoolBudgetAmount'), require('./model/ResourcePoolBudgetAmountPatchItem'), require('./model/ResourcePoolBudgetAmountUpdatedEvent'), require('./model/ResourcePoolCreatedEvent'), require('./model/ResourcePoolDeletedEvent'), require('./model/ResourcePoolFieldValuePatchItem'), require('./model/ResourcePoolFieldValueUpdatedEvent'), require('./model/ResourcePoolFieldValuesUpdatedMessagePayload'), require('./model/ResourcePoolNameUpdatedEvent'), require('./model/ResourcePoolPlanBudgetAmountUpdatedEvent'), require('./model/ResourcePoolPlanBudgetCopiedEvent'), require('./model/ResourcePoolsCreatedMessagePayload'), require('./model/ResourcePoolsDeletedMessagePayload'), require('./model/ResourcePoolsUpdatedMessagePayload'), require('./model/RiskFieldDetail'), require('./model/RiskType'), require('./model/RoleType'), require('./model/Row'), require('./model/Scale'), require('./model/ScalePoint'), require('./model/ScalePointAutoScaleValueUpdatedEvent'), require('./model/ScalePointAutoValueUpdatedEvent'), require('./model/ScalePointCreatedEvent'), require('./model/ScalePointDeletedEvent'), require('./model/ScalePointManualScaleValueUpdatedEvent'), require('./model/ScalePointManualValueUpdatedEvent'), require('./model/ScalePointNameUpdatedEvent'), require('./model/ScalePointProjectUpdatedEvent'), require('./model/SchedulingCriteria'), require('./model/Schema'), require('./model/ScoreWeightCreatedEvent'), require('./model/ScoreWeightDeletedEvent'), require('./model/ScoreWeightFieldWeightCreatedEvent'), require('./model/ScoreWeightFieldWeightDeletedEvent'), require('./model/ScoreWeightFieldWeightLockUpdatedEvent'), require('./model/ScoreWeightFieldWeightValueUpdatedEvent'), require('./model/ScoreWeightNameUpdatedEvent'), require('./model/ScoreWeightsUpdatedMessagePayload'), require('./model/SetDependenciesRequest'), require('./model/Sheet'), require('./model/SourceCreatedEvent'), require('./model/SourceDeletedEvent'), require('./model/SourceNameUpdatedEvent'), require('./model/SourceType'), require('./model/SpreadsheetReport'), require('./model/SpreadsheetReportProgress'), require('./model/SpreadsheetReportProgressMessagePayload'), require('./model/SpreadsheetReportProgressStatus'), require('./model/SubPortfolioAddedEvent'), require('./model/SubPortfolioRemovedEvent'), require('./model/TagAddedMessagePayload'), require('./model/TagColorUpdatedEvent'), require('./model/TagCreatedEvent'), require('./model/TagDeletedEvent'), require('./model/TagDeletedMessagePayload'), require('./model/TagNameUpdatedEvent'), require('./model/TagParentUpdatedEvent'), require('./model/TagUpdatedMessagePayload'), require('./model/TargetType'), require('./model/TemplateProperty'), require('./model/TimeInterval'), require('./model/TimePeriod'), require('./model/TimePeriodType'), require('./model/ToastMessagePayload'), require('./model/UserActivityTimestamp'), require('./model/UserActivityTimestamps'), require('./model/UserAddedEvent'), require('./model/UserApprovalAddedEvent'), require('./model/UserAuthenticatedEvent'), require('./model/UserGroupAddedEvent'), require('./model/UserRegistrationToken'), require('./model/UserStatus'), require('./model/ValueCount'), require('./model/ValueInsights'), require('./model/Warnings'), require('./model/WhatsIn'), require('./model/Wiwo'), require('./model/Activities'), require('./model/Activity'), require('./model/Attachment'), require('./model/Attachments'), require('./model/BudgetAllocations'), require('./model/CategoryOption'), require('./model/CategoryOptions'), require('./model/Classifications'), require('./model/Comment'), require('./model/Comments'), require('./model/CustomNames'), require('./model/Field'), require('./model/FieldGrades'), require('./model/FieldValues'), require('./model/Fields'), require('./model/FileAttachment'), require('./model/Goals'), require('./model/Group'), require('./model/Groups'), require('./model/JiraFieldMapping'), require('./model/JiraFieldMappings'), require('./model/JiraInstance'), require('./model/Mapping'), require('./model/Permissions'), require('./model/PlanGrade'), require('./model/Portfolio'), require('./model/PortfolioPlan'), require('./model/PortfolioPlanGrades'), require('./model/PortfolioPlanInsights'), require('./model/PortfolioPlanUser'), require('./model/PortfolioPlanUsers'), require('./model/PortfolioPlans'), require('./model/Portfolios'), require('./model/Project'), require('./model/Projects'), require('./model/Properties'), require('./model/Recommendations'), require('./model/ResourcePool'), require('./model/ResourcePoolBudgetAmounts'), require('./model/ResourcePoolFieldValue'), require('./model/ResourcePools'), require('./model/ScoreWeight'), require('./model/ScoreWeights'), require('./model/Sheets'), require('./model/Source'), require('./model/Spreadsheet'), require('./model/Tag'), require('./model/Tags'), require('./model/User'), require('./model/Users'), require('./model/ValueCounts'), require('./api/ActivitiesApi'), require('./api/ApiActivityApi'), require('./api/AttachmentsApi'), require('./api/BudgetFieldsApi'), require('./api/ClassificationApi'), require('./api/CommentsApi'), require('./api/DefaultApi'), require('./api/FieldsApi'), require('./api/GoalsApi'), require('./api/GroupsApi'), require('./api/JiraApi'), require('./api/LogoutApi'), require('./api/MailApi'), require('./api/MappingsApi'), require('./api/MessageTokensApi'), require('./api/MessagesApi'), require('./api/NotificationsApi'), require('./api/PlansApi'), require('./api/PodsApi'), require('./api/PortfolioPlanUsersApi'), require('./api/PortfolioPlansApi'), require('./api/PortfoliosApi'), require('./api/ProjectsApi'), require('./api/PropertiesApi'), require('./api/RegistrationApi'), require('./api/ReportsApi'), require('./api/ResourcePoolsApi'), require('./api/ScoreWeightsApi'), require('./api/SourcesApi'), require('./api/SpreadsheetApi'), require('./api/TagsApi'), require('./api/UserApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, AccessTokenGeneratedEvent, ActivityType, AddUserRequest, AddUsersRequest, AddedToPortfolioMessagePayload, AddedToPortfolioPlanMessagePayload, AttachmentCreatedEvent, AttachmentDeletedEvent, AttachmentNameUpdatedEvent, AttachmentUpdatedMessagePayload, Attributes, AuthorizationCodeGeneratedEvent, BalanceFieldDetail, BudgetAllocation, BudgetFieldCreatedMessagePayload, BudgetFieldsDeletedMessagePayload, BudgetFieldsUpdatedMessagePayload, CalculationType, CategorizationInsight, CategoryDisplayOrder, CategoryOptionAddedMessagePayload, CategoryOptionCreatedEvent, CategoryOptionDeletedEvent, CategoryOptionDeletedMessagePayload, CategoryOptionNameUpdatedEvent, CategoryOptionPositionUpdatedEvent, CategoryOptionUpdatedMessagePayload, Classification, Column, ColumnType, CommentAddedEvent, CommentAddedMessagePayload, CommentDeletedEvent, CommentDeletedMessagePayload, CommentEditedEvent, CommentEditedMessagePayload, CostBudgetAllocation, Currency, CustomName, CustomNameAddedEvent, CustomNameDeletedEvent, CustomNameGroupType, CustomNameType, CustomNameUpdatedEvent, CustomNamesUpdatedMessagePayload, DLCGroup, DLIApplication, DataFormats, DataType, DataUpdatedMessagePayload, DlCollection, DlResource, DlcPortfolio, DraftProjectsSubmittedMessagePayload, ErrorResponse, ExpandComponent, ExportConfig, ExportFormatType, ExportType, FieldAttributes, FieldAttributesCategoryDisplayOrderUpdatedEvent, FieldAttributesDataFormatsCurrencyUpdatedEvent, FieldAttributesDataFormatsDecimalPlacesUpdatedEvent, FieldAttributesDataFormatsNegativesUpdatedEvent, FieldAttributesPlanningWindowEndUpdatedEvent, FieldAttributesPlanningWindowStartUpdatedEvent, FieldCalculationTypeUpdatedEvent, FieldCategoryOptionsUpdatedEvent, FieldCreatedEvent, FieldCreatedMessagePayload, FieldDataTypeUpdatedEvent, FieldDeletedEvent, FieldDescriptionUpdatedEvent, FieldGrade, FieldIdeaFieldPositionUpdatedEvent, FieldInsight, FieldIsAutoScaleUpdatedEvent, FieldIsFieldTypeApprovedUpdatedEvent, FieldIsIdeaFieldRequiredUpdatedEvent, FieldIsIdeaFieldUpdatedEvent, FieldNameUpdatedEvent, FieldPositionUpdatedEvent, FieldTagAddedEvent, FieldTagRemovedEvent, FieldTargetTypeUpdatedEvent, FieldType, FieldTypePositionUpdatedEvent, FieldTypeUpdatedEvent, FieldValue, FieldValuePatchItem, FieldValuesCollectionInfo, FieldValuesProjectDeletedMessagePayload, FieldValuesUpdatedMessagePayload, FieldWeight, FieldsDeletedMessagePayload, FieldsUpdatedMessagePayload, Filter, FilterType, Goal, GoalAddedEvent, GoalDeletedEvent, GoalUpdatedEvent, GoalsUpdatedMessagePayload, Grade, GradingType, Header, IdeaFormFieldRequest, ImportType, Insight, InsightType, JiraComment, KloudlessFile, LikertScaleFieldInsight, LikertScaleInsight, LikertScaleType, Mail, MappedProject, Mappings, Message, MessageDestinationType, MessageToken, MessageType, MinifiedFieldValue, MinifiedProject, MinifiedProjects, MinifiedYearlyFieldValue, Negatives, NotificationsMessagePayload, Operation, OperationType, Operations, PatchItem, Permission, PermissionType, PlanType, PlanningPeriod, PlanningWindow, PortfolioArchivedEvent, PortfolioArchivedMessagePayload, PortfolioBudgetTimePeriodTypeUpdatedEvent, PortfolioCreatedEvent, PortfolioIsMonthlySpendPlanUpdatedEvent, PortfolioNameUpdatedEvent, PortfolioPlanCreatedEvent, PortfolioPlanDataImportedEvent, PortfolioPlanDeletedEvent, PortfolioPlanDescriptionUpdatedEvent, PortfolioPlanGrade, PortfolioPlanNameUpdatedEvent, PortfolioPlanRebaselinedEvent, PortfolioPlanUserCreatedMessagePayload, PortfolioPlanUserCreatedV2Event, PortfolioPlanUserDeletedEvent, PortfolioPlanUserDeletedMessagePayload, PortfolioPlanUserDraftProjectIdsUpdatedEvent, PortfolioPlanUserFieldPermissionsUpdatedEvent, PortfolioPlanUserProjectPermissionsUpdatedEvent, PortfolioPlanUserRole, PortfolioPlanUserRolesUpdatedNewEvent, PortfolioPlanUserUpdatedMessagePayload, PortfolioPlanWithProjects, PortfolioPlansUpdatedMessagePayload, PortfolioPlansWithProjects, PortfolioProjectsCreatedEvent, PortfolioProjectsUpdatedEvent, PortfolioScoreWeightsUpdatedEvent, PortfolioTimeIntervalUpdatedEvent, PortfolioUpdatedMessagePayload, PortfolioUserRegistrationTokenUpdatedEvent, ProjectAccessGrantedMessagePayload, ProjectAccessRevokedMessagePayload, ProjectAttachmentAddedEvent, ProjectAttachmentAddedMessagePayload, ProjectAttachmentRemovedEvent, ProjectAttachmentRemovedMessagePayload, ProjectContributingUserAddedEvent, ProjectContributingUserDeletedEvent, ProjectContributorsUpdatedMessagePayload, ProjectCreatedEvent, ProjectDeletedEvent, ProjectDependenciesUpdatedMessagePayload, ProjectDependsOnAddedEvent, ProjectDependsOnRemovedEvent, ProjectFieldValue, ProjectFieldValueDeletedEvent, ProjectFieldValueUpdatedEvent, ProjectFieldValuesDeletedEvent, ProjectPortfolioPlanDeletedEvent, ProjectPortfolioPlanFieldValueDeletedEvent, ProjectPortfolioPlanFieldValueUpdatedEvent, ProjectPortfolioPlanFieldValuesCopiedEvent, ProjectPortfolioPlanIsDraftUpdatedEvent, ProjectScoresUpdatedMessagePayload, ProjectSummary, ProjectTagAddedEvent, ProjectTagRemovedEvent, ProjectsCreatedMessagePayload, ProjectsDeletedMessagePayload, Property, PropertyName, ProvisionGroupRequest, ProvisionGroupResponse, Recommendation, RecommendationType, RegisterUserRequest, RemoveContributingUsersRequest, RemovedFromPortfolioMessagePayload, RemovedFromPortfolioPlanMessagePayload, ResourcePoolBudgetAmount, ResourcePoolBudgetAmountPatchItem, ResourcePoolBudgetAmountUpdatedEvent, ResourcePoolCreatedEvent, ResourcePoolDeletedEvent, ResourcePoolFieldValuePatchItem, ResourcePoolFieldValueUpdatedEvent, ResourcePoolFieldValuesUpdatedMessagePayload, ResourcePoolNameUpdatedEvent, ResourcePoolPlanBudgetAmountUpdatedEvent, ResourcePoolPlanBudgetCopiedEvent, ResourcePoolsCreatedMessagePayload, ResourcePoolsDeletedMessagePayload, ResourcePoolsUpdatedMessagePayload, RiskFieldDetail, RiskType, RoleType, Row, Scale, ScalePoint, ScalePointAutoScaleValueUpdatedEvent, ScalePointAutoValueUpdatedEvent, ScalePointCreatedEvent, ScalePointDeletedEvent, ScalePointManualScaleValueUpdatedEvent, ScalePointManualValueUpdatedEvent, ScalePointNameUpdatedEvent, ScalePointProjectUpdatedEvent, SchedulingCriteria, Schema, ScoreWeightCreatedEvent, ScoreWeightDeletedEvent, ScoreWeightFieldWeightCreatedEvent, ScoreWeightFieldWeightDeletedEvent, ScoreWeightFieldWeightLockUpdatedEvent, ScoreWeightFieldWeightValueUpdatedEvent, ScoreWeightNameUpdatedEvent, ScoreWeightsUpdatedMessagePayload, SetDependenciesRequest, Sheet, SourceCreatedEvent, SourceDeletedEvent, SourceNameUpdatedEvent, SourceType, SpreadsheetReport, SpreadsheetReportProgress, SpreadsheetReportProgressMessagePayload, SpreadsheetReportProgressStatus, SubPortfolioAddedEvent, SubPortfolioRemovedEvent, TagAddedMessagePayload, TagColorUpdatedEvent, TagCreatedEvent, TagDeletedEvent, TagDeletedMessagePayload, TagNameUpdatedEvent, TagParentUpdatedEvent, TagUpdatedMessagePayload, TargetType, TemplateProperty, TimeInterval, TimePeriod, TimePeriodType, ToastMessagePayload, UserActivityTimestamp, UserActivityTimestamps, UserAddedEvent, UserApprovalAddedEvent, UserAuthenticatedEvent, UserGroupAddedEvent, UserRegistrationToken, UserStatus, ValueCount, ValueInsights, Warnings, WhatsIn, Wiwo, Activities, Activity, Attachment, Attachments, BudgetAllocations, CategoryOption, CategoryOptions, Classifications, Comment, Comments, CustomNames, Field, FieldGrades, FieldValues, Fields, FileAttachment, Goals, Group, Groups, JiraFieldMapping, JiraFieldMappings, JiraInstance, Mapping, Permissions, PlanGrade, Portfolio, PortfolioPlan, PortfolioPlanGrades, PortfolioPlanInsights, PortfolioPlanUser, PortfolioPlanUsers, PortfolioPlans, Portfolios, Project, Projects, Properties, Recommendations, ResourcePool, ResourcePoolBudgetAmounts, ResourcePoolFieldValue, ResourcePools, ScoreWeight, ScoreWeights, Sheets, Source, Spreadsheet, Tag, Tags, User, Users, ValueCounts, ActivitiesApi, ApiActivityApi, AttachmentsApi, BudgetFieldsApi, ClassificationApi, CommentsApi, DefaultApi, FieldsApi, GoalsApi, GroupsApi, JiraApi, LogoutApi, MailApi, MappingsApi, MessageTokensApi, MessagesApi, NotificationsApi, PlansApi, PodsApi, PortfolioPlanUsersApi, PortfolioPlansApi, PortfoliosApi, ProjectsApi, PropertiesApi, RegistrationApi, ReportsApi, ResourcePoolsApi, ScoreWeightsApi, SourcesApi, SpreadsheetApi, TagsApi, UserApi, UsersApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var DecisionLensApi = require('index'); // See note below*.
   * var xxxSvc = new DecisionLensApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new DecisionLensApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new DecisionLensApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new DecisionLensApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessTokenGeneratedEvent model constructor.
     * @property {module:model/AccessTokenGeneratedEvent}
     */
    AccessTokenGeneratedEvent: AccessTokenGeneratedEvent,
    /**
     * The ActivityType model constructor.
     * @property {module:model/ActivityType}
     */
    ActivityType: ActivityType,
    /**
     * The AddUserRequest model constructor.
     * @property {module:model/AddUserRequest}
     */
    AddUserRequest: AddUserRequest,
    /**
     * The AddUsersRequest model constructor.
     * @property {module:model/AddUsersRequest}
     */
    AddUsersRequest: AddUsersRequest,
    /**
     * The AddedToPortfolioMessagePayload model constructor.
     * @property {module:model/AddedToPortfolioMessagePayload}
     */
    AddedToPortfolioMessagePayload: AddedToPortfolioMessagePayload,
    /**
     * The AddedToPortfolioPlanMessagePayload model constructor.
     * @property {module:model/AddedToPortfolioPlanMessagePayload}
     */
    AddedToPortfolioPlanMessagePayload: AddedToPortfolioPlanMessagePayload,
    /**
     * The AttachmentCreatedEvent model constructor.
     * @property {module:model/AttachmentCreatedEvent}
     */
    AttachmentCreatedEvent: AttachmentCreatedEvent,
    /**
     * The AttachmentDeletedEvent model constructor.
     * @property {module:model/AttachmentDeletedEvent}
     */
    AttachmentDeletedEvent: AttachmentDeletedEvent,
    /**
     * The AttachmentNameUpdatedEvent model constructor.
     * @property {module:model/AttachmentNameUpdatedEvent}
     */
    AttachmentNameUpdatedEvent: AttachmentNameUpdatedEvent,
    /**
     * The AttachmentUpdatedMessagePayload model constructor.
     * @property {module:model/AttachmentUpdatedMessagePayload}
     */
    AttachmentUpdatedMessagePayload: AttachmentUpdatedMessagePayload,
    /**
     * The Attributes model constructor.
     * @property {module:model/Attributes}
     */
    Attributes: Attributes,
    /**
     * The AuthorizationCodeGeneratedEvent model constructor.
     * @property {module:model/AuthorizationCodeGeneratedEvent}
     */
    AuthorizationCodeGeneratedEvent: AuthorizationCodeGeneratedEvent,
    /**
     * The BalanceFieldDetail model constructor.
     * @property {module:model/BalanceFieldDetail}
     */
    BalanceFieldDetail: BalanceFieldDetail,
    /**
     * The BudgetAllocation model constructor.
     * @property {module:model/BudgetAllocation}
     */
    BudgetAllocation: BudgetAllocation,
    /**
     * The BudgetFieldCreatedMessagePayload model constructor.
     * @property {module:model/BudgetFieldCreatedMessagePayload}
     */
    BudgetFieldCreatedMessagePayload: BudgetFieldCreatedMessagePayload,
    /**
     * The BudgetFieldsDeletedMessagePayload model constructor.
     * @property {module:model/BudgetFieldsDeletedMessagePayload}
     */
    BudgetFieldsDeletedMessagePayload: BudgetFieldsDeletedMessagePayload,
    /**
     * The BudgetFieldsUpdatedMessagePayload model constructor.
     * @property {module:model/BudgetFieldsUpdatedMessagePayload}
     */
    BudgetFieldsUpdatedMessagePayload: BudgetFieldsUpdatedMessagePayload,
    /**
     * The CalculationType model constructor.
     * @property {module:model/CalculationType}
     */
    CalculationType: CalculationType,
    /**
     * The CategorizationInsight model constructor.
     * @property {module:model/CategorizationInsight}
     */
    CategorizationInsight: CategorizationInsight,
    /**
     * The CategoryDisplayOrder model constructor.
     * @property {module:model/CategoryDisplayOrder}
     */
    CategoryDisplayOrder: CategoryDisplayOrder,
    /**
     * The CategoryOptionAddedMessagePayload model constructor.
     * @property {module:model/CategoryOptionAddedMessagePayload}
     */
    CategoryOptionAddedMessagePayload: CategoryOptionAddedMessagePayload,
    /**
     * The CategoryOptionCreatedEvent model constructor.
     * @property {module:model/CategoryOptionCreatedEvent}
     */
    CategoryOptionCreatedEvent: CategoryOptionCreatedEvent,
    /**
     * The CategoryOptionDeletedEvent model constructor.
     * @property {module:model/CategoryOptionDeletedEvent}
     */
    CategoryOptionDeletedEvent: CategoryOptionDeletedEvent,
    /**
     * The CategoryOptionDeletedMessagePayload model constructor.
     * @property {module:model/CategoryOptionDeletedMessagePayload}
     */
    CategoryOptionDeletedMessagePayload: CategoryOptionDeletedMessagePayload,
    /**
     * The CategoryOptionNameUpdatedEvent model constructor.
     * @property {module:model/CategoryOptionNameUpdatedEvent}
     */
    CategoryOptionNameUpdatedEvent: CategoryOptionNameUpdatedEvent,
    /**
     * The CategoryOptionPositionUpdatedEvent model constructor.
     * @property {module:model/CategoryOptionPositionUpdatedEvent}
     */
    CategoryOptionPositionUpdatedEvent: CategoryOptionPositionUpdatedEvent,
    /**
     * The CategoryOptionUpdatedMessagePayload model constructor.
     * @property {module:model/CategoryOptionUpdatedMessagePayload}
     */
    CategoryOptionUpdatedMessagePayload: CategoryOptionUpdatedMessagePayload,
    /**
     * The Classification model constructor.
     * @property {module:model/Classification}
     */
    Classification: Classification,
    /**
     * The Column model constructor.
     * @property {module:model/Column}
     */
    Column: Column,
    /**
     * The ColumnType model constructor.
     * @property {module:model/ColumnType}
     */
    ColumnType: ColumnType,
    /**
     * The CommentAddedEvent model constructor.
     * @property {module:model/CommentAddedEvent}
     */
    CommentAddedEvent: CommentAddedEvent,
    /**
     * The CommentAddedMessagePayload model constructor.
     * @property {module:model/CommentAddedMessagePayload}
     */
    CommentAddedMessagePayload: CommentAddedMessagePayload,
    /**
     * The CommentDeletedEvent model constructor.
     * @property {module:model/CommentDeletedEvent}
     */
    CommentDeletedEvent: CommentDeletedEvent,
    /**
     * The CommentDeletedMessagePayload model constructor.
     * @property {module:model/CommentDeletedMessagePayload}
     */
    CommentDeletedMessagePayload: CommentDeletedMessagePayload,
    /**
     * The CommentEditedEvent model constructor.
     * @property {module:model/CommentEditedEvent}
     */
    CommentEditedEvent: CommentEditedEvent,
    /**
     * The CommentEditedMessagePayload model constructor.
     * @property {module:model/CommentEditedMessagePayload}
     */
    CommentEditedMessagePayload: CommentEditedMessagePayload,
    /**
     * The CostBudgetAllocation model constructor.
     * @property {module:model/CostBudgetAllocation}
     */
    CostBudgetAllocation: CostBudgetAllocation,
    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency: Currency,
    /**
     * The CustomName model constructor.
     * @property {module:model/CustomName}
     */
    CustomName: CustomName,
    /**
     * The CustomNameAddedEvent model constructor.
     * @property {module:model/CustomNameAddedEvent}
     */
    CustomNameAddedEvent: CustomNameAddedEvent,
    /**
     * The CustomNameDeletedEvent model constructor.
     * @property {module:model/CustomNameDeletedEvent}
     */
    CustomNameDeletedEvent: CustomNameDeletedEvent,
    /**
     * The CustomNameGroupType model constructor.
     * @property {module:model/CustomNameGroupType}
     */
    CustomNameGroupType: CustomNameGroupType,
    /**
     * The CustomNameType model constructor.
     * @property {module:model/CustomNameType}
     */
    CustomNameType: CustomNameType,
    /**
     * The CustomNameUpdatedEvent model constructor.
     * @property {module:model/CustomNameUpdatedEvent}
     */
    CustomNameUpdatedEvent: CustomNameUpdatedEvent,
    /**
     * The CustomNamesUpdatedMessagePayload model constructor.
     * @property {module:model/CustomNamesUpdatedMessagePayload}
     */
    CustomNamesUpdatedMessagePayload: CustomNamesUpdatedMessagePayload,
    /**
     * The DLCGroup model constructor.
     * @property {module:model/DLCGroup}
     */
    DLCGroup: DLCGroup,
    /**
     * The DLIApplication model constructor.
     * @property {module:model/DLIApplication}
     */
    DLIApplication: DLIApplication,
    /**
     * The DataFormats model constructor.
     * @property {module:model/DataFormats}
     */
    DataFormats: DataFormats,
    /**
     * The DataType model constructor.
     * @property {module:model/DataType}
     */
    DataType: DataType,
    /**
     * The DataUpdatedMessagePayload model constructor.
     * @property {module:model/DataUpdatedMessagePayload}
     */
    DataUpdatedMessagePayload: DataUpdatedMessagePayload,
    /**
     * The DlCollection model constructor.
     * @property {module:model/DlCollection}
     */
    DlCollection: DlCollection,
    /**
     * The DlResource model constructor.
     * @property {module:model/DlResource}
     */
    DlResource: DlResource,
    /**
     * The DlcPortfolio model constructor.
     * @property {module:model/DlcPortfolio}
     */
    DlcPortfolio: DlcPortfolio,
    /**
     * The DraftProjectsSubmittedMessagePayload model constructor.
     * @property {module:model/DraftProjectsSubmittedMessagePayload}
     */
    DraftProjectsSubmittedMessagePayload: DraftProjectsSubmittedMessagePayload,
    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The ExpandComponent model constructor.
     * @property {module:model/ExpandComponent}
     */
    ExpandComponent: ExpandComponent,
    /**
     * The ExportConfig model constructor.
     * @property {module:model/ExportConfig}
     */
    ExportConfig: ExportConfig,
    /**
     * The ExportFormatType model constructor.
     * @property {module:model/ExportFormatType}
     */
    ExportFormatType: ExportFormatType,
    /**
     * The ExportType model constructor.
     * @property {module:model/ExportType}
     */
    ExportType: ExportType,
    /**
     * The FieldAttributes model constructor.
     * @property {module:model/FieldAttributes}
     */
    FieldAttributes: FieldAttributes,
    /**
     * The FieldAttributesCategoryDisplayOrderUpdatedEvent model constructor.
     * @property {module:model/FieldAttributesCategoryDisplayOrderUpdatedEvent}
     */
    FieldAttributesCategoryDisplayOrderUpdatedEvent: FieldAttributesCategoryDisplayOrderUpdatedEvent,
    /**
     * The FieldAttributesDataFormatsCurrencyUpdatedEvent model constructor.
     * @property {module:model/FieldAttributesDataFormatsCurrencyUpdatedEvent}
     */
    FieldAttributesDataFormatsCurrencyUpdatedEvent: FieldAttributesDataFormatsCurrencyUpdatedEvent,
    /**
     * The FieldAttributesDataFormatsDecimalPlacesUpdatedEvent model constructor.
     * @property {module:model/FieldAttributesDataFormatsDecimalPlacesUpdatedEvent}
     */
    FieldAttributesDataFormatsDecimalPlacesUpdatedEvent: FieldAttributesDataFormatsDecimalPlacesUpdatedEvent,
    /**
     * The FieldAttributesDataFormatsNegativesUpdatedEvent model constructor.
     * @property {module:model/FieldAttributesDataFormatsNegativesUpdatedEvent}
     */
    FieldAttributesDataFormatsNegativesUpdatedEvent: FieldAttributesDataFormatsNegativesUpdatedEvent,
    /**
     * The FieldAttributesPlanningWindowEndUpdatedEvent model constructor.
     * @property {module:model/FieldAttributesPlanningWindowEndUpdatedEvent}
     */
    FieldAttributesPlanningWindowEndUpdatedEvent: FieldAttributesPlanningWindowEndUpdatedEvent,
    /**
     * The FieldAttributesPlanningWindowStartUpdatedEvent model constructor.
     * @property {module:model/FieldAttributesPlanningWindowStartUpdatedEvent}
     */
    FieldAttributesPlanningWindowStartUpdatedEvent: FieldAttributesPlanningWindowStartUpdatedEvent,
    /**
     * The FieldCalculationTypeUpdatedEvent model constructor.
     * @property {module:model/FieldCalculationTypeUpdatedEvent}
     */
    FieldCalculationTypeUpdatedEvent: FieldCalculationTypeUpdatedEvent,
    /**
     * The FieldCategoryOptionsUpdatedEvent model constructor.
     * @property {module:model/FieldCategoryOptionsUpdatedEvent}
     */
    FieldCategoryOptionsUpdatedEvent: FieldCategoryOptionsUpdatedEvent,
    /**
     * The FieldCreatedEvent model constructor.
     * @property {module:model/FieldCreatedEvent}
     */
    FieldCreatedEvent: FieldCreatedEvent,
    /**
     * The FieldCreatedMessagePayload model constructor.
     * @property {module:model/FieldCreatedMessagePayload}
     */
    FieldCreatedMessagePayload: FieldCreatedMessagePayload,
    /**
     * The FieldDataTypeUpdatedEvent model constructor.
     * @property {module:model/FieldDataTypeUpdatedEvent}
     */
    FieldDataTypeUpdatedEvent: FieldDataTypeUpdatedEvent,
    /**
     * The FieldDeletedEvent model constructor.
     * @property {module:model/FieldDeletedEvent}
     */
    FieldDeletedEvent: FieldDeletedEvent,
    /**
     * The FieldDescriptionUpdatedEvent model constructor.
     * @property {module:model/FieldDescriptionUpdatedEvent}
     */
    FieldDescriptionUpdatedEvent: FieldDescriptionUpdatedEvent,
    /**
     * The FieldGrade model constructor.
     * @property {module:model/FieldGrade}
     */
    FieldGrade: FieldGrade,
    /**
     * The FieldIdeaFieldPositionUpdatedEvent model constructor.
     * @property {module:model/FieldIdeaFieldPositionUpdatedEvent}
     */
    FieldIdeaFieldPositionUpdatedEvent: FieldIdeaFieldPositionUpdatedEvent,
    /**
     * The FieldInsight model constructor.
     * @property {module:model/FieldInsight}
     */
    FieldInsight: FieldInsight,
    /**
     * The FieldIsAutoScaleUpdatedEvent model constructor.
     * @property {module:model/FieldIsAutoScaleUpdatedEvent}
     */
    FieldIsAutoScaleUpdatedEvent: FieldIsAutoScaleUpdatedEvent,
    /**
     * The FieldIsFieldTypeApprovedUpdatedEvent model constructor.
     * @property {module:model/FieldIsFieldTypeApprovedUpdatedEvent}
     */
    FieldIsFieldTypeApprovedUpdatedEvent: FieldIsFieldTypeApprovedUpdatedEvent,
    /**
     * The FieldIsIdeaFieldRequiredUpdatedEvent model constructor.
     * @property {module:model/FieldIsIdeaFieldRequiredUpdatedEvent}
     */
    FieldIsIdeaFieldRequiredUpdatedEvent: FieldIsIdeaFieldRequiredUpdatedEvent,
    /**
     * The FieldIsIdeaFieldUpdatedEvent model constructor.
     * @property {module:model/FieldIsIdeaFieldUpdatedEvent}
     */
    FieldIsIdeaFieldUpdatedEvent: FieldIsIdeaFieldUpdatedEvent,
    /**
     * The FieldNameUpdatedEvent model constructor.
     * @property {module:model/FieldNameUpdatedEvent}
     */
    FieldNameUpdatedEvent: FieldNameUpdatedEvent,
    /**
     * The FieldPositionUpdatedEvent model constructor.
     * @property {module:model/FieldPositionUpdatedEvent}
     */
    FieldPositionUpdatedEvent: FieldPositionUpdatedEvent,
    /**
     * The FieldTagAddedEvent model constructor.
     * @property {module:model/FieldTagAddedEvent}
     */
    FieldTagAddedEvent: FieldTagAddedEvent,
    /**
     * The FieldTagRemovedEvent model constructor.
     * @property {module:model/FieldTagRemovedEvent}
     */
    FieldTagRemovedEvent: FieldTagRemovedEvent,
    /**
     * The FieldTargetTypeUpdatedEvent model constructor.
     * @property {module:model/FieldTargetTypeUpdatedEvent}
     */
    FieldTargetTypeUpdatedEvent: FieldTargetTypeUpdatedEvent,
    /**
     * The FieldType model constructor.
     * @property {module:model/FieldType}
     */
    FieldType: FieldType,
    /**
     * The FieldTypePositionUpdatedEvent model constructor.
     * @property {module:model/FieldTypePositionUpdatedEvent}
     */
    FieldTypePositionUpdatedEvent: FieldTypePositionUpdatedEvent,
    /**
     * The FieldTypeUpdatedEvent model constructor.
     * @property {module:model/FieldTypeUpdatedEvent}
     */
    FieldTypeUpdatedEvent: FieldTypeUpdatedEvent,
    /**
     * The FieldValue model constructor.
     * @property {module:model/FieldValue}
     */
    FieldValue: FieldValue,
    /**
     * The FieldValuePatchItem model constructor.
     * @property {module:model/FieldValuePatchItem}
     */
    FieldValuePatchItem: FieldValuePatchItem,
    /**
     * The FieldValuesCollectionInfo model constructor.
     * @property {module:model/FieldValuesCollectionInfo}
     */
    FieldValuesCollectionInfo: FieldValuesCollectionInfo,
    /**
     * The FieldValuesProjectDeletedMessagePayload model constructor.
     * @property {module:model/FieldValuesProjectDeletedMessagePayload}
     */
    FieldValuesProjectDeletedMessagePayload: FieldValuesProjectDeletedMessagePayload,
    /**
     * The FieldValuesUpdatedMessagePayload model constructor.
     * @property {module:model/FieldValuesUpdatedMessagePayload}
     */
    FieldValuesUpdatedMessagePayload: FieldValuesUpdatedMessagePayload,
    /**
     * The FieldWeight model constructor.
     * @property {module:model/FieldWeight}
     */
    FieldWeight: FieldWeight,
    /**
     * The FieldsDeletedMessagePayload model constructor.
     * @property {module:model/FieldsDeletedMessagePayload}
     */
    FieldsDeletedMessagePayload: FieldsDeletedMessagePayload,
    /**
     * The FieldsUpdatedMessagePayload model constructor.
     * @property {module:model/FieldsUpdatedMessagePayload}
     */
    FieldsUpdatedMessagePayload: FieldsUpdatedMessagePayload,
    /**
     * The Filter model constructor.
     * @property {module:model/Filter}
     */
    Filter: Filter,
    /**
     * The FilterType model constructor.
     * @property {module:model/FilterType}
     */
    FilterType: FilterType,
    /**
     * The Goal model constructor.
     * @property {module:model/Goal}
     */
    Goal: Goal,
    /**
     * The GoalAddedEvent model constructor.
     * @property {module:model/GoalAddedEvent}
     */
    GoalAddedEvent: GoalAddedEvent,
    /**
     * The GoalDeletedEvent model constructor.
     * @property {module:model/GoalDeletedEvent}
     */
    GoalDeletedEvent: GoalDeletedEvent,
    /**
     * The GoalUpdatedEvent model constructor.
     * @property {module:model/GoalUpdatedEvent}
     */
    GoalUpdatedEvent: GoalUpdatedEvent,
    /**
     * The GoalsUpdatedMessagePayload model constructor.
     * @property {module:model/GoalsUpdatedMessagePayload}
     */
    GoalsUpdatedMessagePayload: GoalsUpdatedMessagePayload,
    /**
     * The Grade model constructor.
     * @property {module:model/Grade}
     */
    Grade: Grade,
    /**
     * The GradingType model constructor.
     * @property {module:model/GradingType}
     */
    GradingType: GradingType,
    /**
     * The Header model constructor.
     * @property {module:model/Header}
     */
    Header: Header,
    /**
     * The IdeaFormFieldRequest model constructor.
     * @property {module:model/IdeaFormFieldRequest}
     */
    IdeaFormFieldRequest: IdeaFormFieldRequest,
    /**
     * The ImportType model constructor.
     * @property {module:model/ImportType}
     */
    ImportType: ImportType,
    /**
     * The Insight model constructor.
     * @property {module:model/Insight}
     */
    Insight: Insight,
    /**
     * The InsightType model constructor.
     * @property {module:model/InsightType}
     */
    InsightType: InsightType,
    /**
     * The JiraComment model constructor.
     * @property {module:model/JiraComment}
     */
    JiraComment: JiraComment,
    /**
     * The KloudlessFile model constructor.
     * @property {module:model/KloudlessFile}
     */
    KloudlessFile: KloudlessFile,
    /**
     * The LikertScaleFieldInsight model constructor.
     * @property {module:model/LikertScaleFieldInsight}
     */
    LikertScaleFieldInsight: LikertScaleFieldInsight,
    /**
     * The LikertScaleInsight model constructor.
     * @property {module:model/LikertScaleInsight}
     */
    LikertScaleInsight: LikertScaleInsight,
    /**
     * The LikertScaleType model constructor.
     * @property {module:model/LikertScaleType}
     */
    LikertScaleType: LikertScaleType,
    /**
     * The Mail model constructor.
     * @property {module:model/Mail}
     */
    Mail: Mail,
    /**
     * The MappedProject model constructor.
     * @property {module:model/MappedProject}
     */
    MappedProject: MappedProject,
    /**
     * The Mappings model constructor.
     * @property {module:model/Mappings}
     */
    Mappings: Mappings,
    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message: Message,
    /**
     * The MessageDestinationType model constructor.
     * @property {module:model/MessageDestinationType}
     */
    MessageDestinationType: MessageDestinationType,
    /**
     * The MessageToken model constructor.
     * @property {module:model/MessageToken}
     */
    MessageToken: MessageToken,
    /**
     * The MessageType model constructor.
     * @property {module:model/MessageType}
     */
    MessageType: MessageType,
    /**
     * The MinifiedFieldValue model constructor.
     * @property {module:model/MinifiedFieldValue}
     */
    MinifiedFieldValue: MinifiedFieldValue,
    /**
     * The MinifiedProject model constructor.
     * @property {module:model/MinifiedProject}
     */
    MinifiedProject: MinifiedProject,
    /**
     * The MinifiedProjects model constructor.
     * @property {module:model/MinifiedProjects}
     */
    MinifiedProjects: MinifiedProjects,
    /**
     * The MinifiedYearlyFieldValue model constructor.
     * @property {module:model/MinifiedYearlyFieldValue}
     */
    MinifiedYearlyFieldValue: MinifiedYearlyFieldValue,
    /**
     * The Negatives model constructor.
     * @property {module:model/Negatives}
     */
    Negatives: Negatives,
    /**
     * The NotificationsMessagePayload model constructor.
     * @property {module:model/NotificationsMessagePayload}
     */
    NotificationsMessagePayload: NotificationsMessagePayload,
    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation: Operation,
    /**
     * The OperationType model constructor.
     * @property {module:model/OperationType}
     */
    OperationType: OperationType,
    /**
     * The Operations model constructor.
     * @property {module:model/Operations}
     */
    Operations: Operations,
    /**
     * The PatchItem model constructor.
     * @property {module:model/PatchItem}
     */
    PatchItem: PatchItem,
    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission: Permission,
    /**
     * The PermissionType model constructor.
     * @property {module:model/PermissionType}
     */
    PermissionType: PermissionType,
    /**
     * The PlanType model constructor.
     * @property {module:model/PlanType}
     */
    PlanType: PlanType,
    /**
     * The PlanningPeriod model constructor.
     * @property {module:model/PlanningPeriod}
     */
    PlanningPeriod: PlanningPeriod,
    /**
     * The PlanningWindow model constructor.
     * @property {module:model/PlanningWindow}
     */
    PlanningWindow: PlanningWindow,
    /**
     * The PortfolioArchivedEvent model constructor.
     * @property {module:model/PortfolioArchivedEvent}
     */
    PortfolioArchivedEvent: PortfolioArchivedEvent,
    /**
     * The PortfolioArchivedMessagePayload model constructor.
     * @property {module:model/PortfolioArchivedMessagePayload}
     */
    PortfolioArchivedMessagePayload: PortfolioArchivedMessagePayload,
    /**
     * The PortfolioBudgetTimePeriodTypeUpdatedEvent model constructor.
     * @property {module:model/PortfolioBudgetTimePeriodTypeUpdatedEvent}
     */
    PortfolioBudgetTimePeriodTypeUpdatedEvent: PortfolioBudgetTimePeriodTypeUpdatedEvent,
    /**
     * The PortfolioCreatedEvent model constructor.
     * @property {module:model/PortfolioCreatedEvent}
     */
    PortfolioCreatedEvent: PortfolioCreatedEvent,
    /**
     * The PortfolioIsMonthlySpendPlanUpdatedEvent model constructor.
     * @property {module:model/PortfolioIsMonthlySpendPlanUpdatedEvent}
     */
    PortfolioIsMonthlySpendPlanUpdatedEvent: PortfolioIsMonthlySpendPlanUpdatedEvent,
    /**
     * The PortfolioNameUpdatedEvent model constructor.
     * @property {module:model/PortfolioNameUpdatedEvent}
     */
    PortfolioNameUpdatedEvent: PortfolioNameUpdatedEvent,
    /**
     * The PortfolioPlanCreatedEvent model constructor.
     * @property {module:model/PortfolioPlanCreatedEvent}
     */
    PortfolioPlanCreatedEvent: PortfolioPlanCreatedEvent,
    /**
     * The PortfolioPlanDataImportedEvent model constructor.
     * @property {module:model/PortfolioPlanDataImportedEvent}
     */
    PortfolioPlanDataImportedEvent: PortfolioPlanDataImportedEvent,
    /**
     * The PortfolioPlanDeletedEvent model constructor.
     * @property {module:model/PortfolioPlanDeletedEvent}
     */
    PortfolioPlanDeletedEvent: PortfolioPlanDeletedEvent,
    /**
     * The PortfolioPlanDescriptionUpdatedEvent model constructor.
     * @property {module:model/PortfolioPlanDescriptionUpdatedEvent}
     */
    PortfolioPlanDescriptionUpdatedEvent: PortfolioPlanDescriptionUpdatedEvent,
    /**
     * The PortfolioPlanGrade model constructor.
     * @property {module:model/PortfolioPlanGrade}
     */
    PortfolioPlanGrade: PortfolioPlanGrade,
    /**
     * The PortfolioPlanNameUpdatedEvent model constructor.
     * @property {module:model/PortfolioPlanNameUpdatedEvent}
     */
    PortfolioPlanNameUpdatedEvent: PortfolioPlanNameUpdatedEvent,
    /**
     * The PortfolioPlanRebaselinedEvent model constructor.
     * @property {module:model/PortfolioPlanRebaselinedEvent}
     */
    PortfolioPlanRebaselinedEvent: PortfolioPlanRebaselinedEvent,
    /**
     * The PortfolioPlanUserCreatedMessagePayload model constructor.
     * @property {module:model/PortfolioPlanUserCreatedMessagePayload}
     */
    PortfolioPlanUserCreatedMessagePayload: PortfolioPlanUserCreatedMessagePayload,
    /**
     * The PortfolioPlanUserCreatedV2Event model constructor.
     * @property {module:model/PortfolioPlanUserCreatedV2Event}
     */
    PortfolioPlanUserCreatedV2Event: PortfolioPlanUserCreatedV2Event,
    /**
     * The PortfolioPlanUserDeletedEvent model constructor.
     * @property {module:model/PortfolioPlanUserDeletedEvent}
     */
    PortfolioPlanUserDeletedEvent: PortfolioPlanUserDeletedEvent,
    /**
     * The PortfolioPlanUserDeletedMessagePayload model constructor.
     * @property {module:model/PortfolioPlanUserDeletedMessagePayload}
     */
    PortfolioPlanUserDeletedMessagePayload: PortfolioPlanUserDeletedMessagePayload,
    /**
     * The PortfolioPlanUserDraftProjectIdsUpdatedEvent model constructor.
     * @property {module:model/PortfolioPlanUserDraftProjectIdsUpdatedEvent}
     */
    PortfolioPlanUserDraftProjectIdsUpdatedEvent: PortfolioPlanUserDraftProjectIdsUpdatedEvent,
    /**
     * The PortfolioPlanUserFieldPermissionsUpdatedEvent model constructor.
     * @property {module:model/PortfolioPlanUserFieldPermissionsUpdatedEvent}
     */
    PortfolioPlanUserFieldPermissionsUpdatedEvent: PortfolioPlanUserFieldPermissionsUpdatedEvent,
    /**
     * The PortfolioPlanUserProjectPermissionsUpdatedEvent model constructor.
     * @property {module:model/PortfolioPlanUserProjectPermissionsUpdatedEvent}
     */
    PortfolioPlanUserProjectPermissionsUpdatedEvent: PortfolioPlanUserProjectPermissionsUpdatedEvent,
    /**
     * The PortfolioPlanUserRole model constructor.
     * @property {module:model/PortfolioPlanUserRole}
     */
    PortfolioPlanUserRole: PortfolioPlanUserRole,
    /**
     * The PortfolioPlanUserRolesUpdatedNewEvent model constructor.
     * @property {module:model/PortfolioPlanUserRolesUpdatedNewEvent}
     */
    PortfolioPlanUserRolesUpdatedNewEvent: PortfolioPlanUserRolesUpdatedNewEvent,
    /**
     * The PortfolioPlanUserUpdatedMessagePayload model constructor.
     * @property {module:model/PortfolioPlanUserUpdatedMessagePayload}
     */
    PortfolioPlanUserUpdatedMessagePayload: PortfolioPlanUserUpdatedMessagePayload,
    /**
     * The PortfolioPlanWithProjects model constructor.
     * @property {module:model/PortfolioPlanWithProjects}
     */
    PortfolioPlanWithProjects: PortfolioPlanWithProjects,
    /**
     * The PortfolioPlansUpdatedMessagePayload model constructor.
     * @property {module:model/PortfolioPlansUpdatedMessagePayload}
     */
    PortfolioPlansUpdatedMessagePayload: PortfolioPlansUpdatedMessagePayload,
    /**
     * The PortfolioPlansWithProjects model constructor.
     * @property {module:model/PortfolioPlansWithProjects}
     */
    PortfolioPlansWithProjects: PortfolioPlansWithProjects,
    /**
     * The PortfolioProjectsCreatedEvent model constructor.
     * @property {module:model/PortfolioProjectsCreatedEvent}
     */
    PortfolioProjectsCreatedEvent: PortfolioProjectsCreatedEvent,
    /**
     * The PortfolioProjectsUpdatedEvent model constructor.
     * @property {module:model/PortfolioProjectsUpdatedEvent}
     */
    PortfolioProjectsUpdatedEvent: PortfolioProjectsUpdatedEvent,
    /**
     * The PortfolioScoreWeightsUpdatedEvent model constructor.
     * @property {module:model/PortfolioScoreWeightsUpdatedEvent}
     */
    PortfolioScoreWeightsUpdatedEvent: PortfolioScoreWeightsUpdatedEvent,
    /**
     * The PortfolioTimeIntervalUpdatedEvent model constructor.
     * @property {module:model/PortfolioTimeIntervalUpdatedEvent}
     */
    PortfolioTimeIntervalUpdatedEvent: PortfolioTimeIntervalUpdatedEvent,
    /**
     * The PortfolioUpdatedMessagePayload model constructor.
     * @property {module:model/PortfolioUpdatedMessagePayload}
     */
    PortfolioUpdatedMessagePayload: PortfolioUpdatedMessagePayload,
    /**
     * The PortfolioUserRegistrationTokenUpdatedEvent model constructor.
     * @property {module:model/PortfolioUserRegistrationTokenUpdatedEvent}
     */
    PortfolioUserRegistrationTokenUpdatedEvent: PortfolioUserRegistrationTokenUpdatedEvent,
    /**
     * The ProjectAccessGrantedMessagePayload model constructor.
     * @property {module:model/ProjectAccessGrantedMessagePayload}
     */
    ProjectAccessGrantedMessagePayload: ProjectAccessGrantedMessagePayload,
    /**
     * The ProjectAccessRevokedMessagePayload model constructor.
     * @property {module:model/ProjectAccessRevokedMessagePayload}
     */
    ProjectAccessRevokedMessagePayload: ProjectAccessRevokedMessagePayload,
    /**
     * The ProjectAttachmentAddedEvent model constructor.
     * @property {module:model/ProjectAttachmentAddedEvent}
     */
    ProjectAttachmentAddedEvent: ProjectAttachmentAddedEvent,
    /**
     * The ProjectAttachmentAddedMessagePayload model constructor.
     * @property {module:model/ProjectAttachmentAddedMessagePayload}
     */
    ProjectAttachmentAddedMessagePayload: ProjectAttachmentAddedMessagePayload,
    /**
     * The ProjectAttachmentRemovedEvent model constructor.
     * @property {module:model/ProjectAttachmentRemovedEvent}
     */
    ProjectAttachmentRemovedEvent: ProjectAttachmentRemovedEvent,
    /**
     * The ProjectAttachmentRemovedMessagePayload model constructor.
     * @property {module:model/ProjectAttachmentRemovedMessagePayload}
     */
    ProjectAttachmentRemovedMessagePayload: ProjectAttachmentRemovedMessagePayload,
    /**
     * The ProjectContributingUserAddedEvent model constructor.
     * @property {module:model/ProjectContributingUserAddedEvent}
     */
    ProjectContributingUserAddedEvent: ProjectContributingUserAddedEvent,
    /**
     * The ProjectContributingUserDeletedEvent model constructor.
     * @property {module:model/ProjectContributingUserDeletedEvent}
     */
    ProjectContributingUserDeletedEvent: ProjectContributingUserDeletedEvent,
    /**
     * The ProjectContributorsUpdatedMessagePayload model constructor.
     * @property {module:model/ProjectContributorsUpdatedMessagePayload}
     */
    ProjectContributorsUpdatedMessagePayload: ProjectContributorsUpdatedMessagePayload,
    /**
     * The ProjectCreatedEvent model constructor.
     * @property {module:model/ProjectCreatedEvent}
     */
    ProjectCreatedEvent: ProjectCreatedEvent,
    /**
     * The ProjectDeletedEvent model constructor.
     * @property {module:model/ProjectDeletedEvent}
     */
    ProjectDeletedEvent: ProjectDeletedEvent,
    /**
     * The ProjectDependenciesUpdatedMessagePayload model constructor.
     * @property {module:model/ProjectDependenciesUpdatedMessagePayload}
     */
    ProjectDependenciesUpdatedMessagePayload: ProjectDependenciesUpdatedMessagePayload,
    /**
     * The ProjectDependsOnAddedEvent model constructor.
     * @property {module:model/ProjectDependsOnAddedEvent}
     */
    ProjectDependsOnAddedEvent: ProjectDependsOnAddedEvent,
    /**
     * The ProjectDependsOnRemovedEvent model constructor.
     * @property {module:model/ProjectDependsOnRemovedEvent}
     */
    ProjectDependsOnRemovedEvent: ProjectDependsOnRemovedEvent,
    /**
     * The ProjectFieldValue model constructor.
     * @property {module:model/ProjectFieldValue}
     */
    ProjectFieldValue: ProjectFieldValue,
    /**
     * The ProjectFieldValueDeletedEvent model constructor.
     * @property {module:model/ProjectFieldValueDeletedEvent}
     */
    ProjectFieldValueDeletedEvent: ProjectFieldValueDeletedEvent,
    /**
     * The ProjectFieldValueUpdatedEvent model constructor.
     * @property {module:model/ProjectFieldValueUpdatedEvent}
     */
    ProjectFieldValueUpdatedEvent: ProjectFieldValueUpdatedEvent,
    /**
     * The ProjectFieldValuesDeletedEvent model constructor.
     * @property {module:model/ProjectFieldValuesDeletedEvent}
     */
    ProjectFieldValuesDeletedEvent: ProjectFieldValuesDeletedEvent,
    /**
     * The ProjectPortfolioPlanDeletedEvent model constructor.
     * @property {module:model/ProjectPortfolioPlanDeletedEvent}
     */
    ProjectPortfolioPlanDeletedEvent: ProjectPortfolioPlanDeletedEvent,
    /**
     * The ProjectPortfolioPlanFieldValueDeletedEvent model constructor.
     * @property {module:model/ProjectPortfolioPlanFieldValueDeletedEvent}
     */
    ProjectPortfolioPlanFieldValueDeletedEvent: ProjectPortfolioPlanFieldValueDeletedEvent,
    /**
     * The ProjectPortfolioPlanFieldValueUpdatedEvent model constructor.
     * @property {module:model/ProjectPortfolioPlanFieldValueUpdatedEvent}
     */
    ProjectPortfolioPlanFieldValueUpdatedEvent: ProjectPortfolioPlanFieldValueUpdatedEvent,
    /**
     * The ProjectPortfolioPlanFieldValuesCopiedEvent model constructor.
     * @property {module:model/ProjectPortfolioPlanFieldValuesCopiedEvent}
     */
    ProjectPortfolioPlanFieldValuesCopiedEvent: ProjectPortfolioPlanFieldValuesCopiedEvent,
    /**
     * The ProjectPortfolioPlanIsDraftUpdatedEvent model constructor.
     * @property {module:model/ProjectPortfolioPlanIsDraftUpdatedEvent}
     */
    ProjectPortfolioPlanIsDraftUpdatedEvent: ProjectPortfolioPlanIsDraftUpdatedEvent,
    /**
     * The ProjectScoresUpdatedMessagePayload model constructor.
     * @property {module:model/ProjectScoresUpdatedMessagePayload}
     */
    ProjectScoresUpdatedMessagePayload: ProjectScoresUpdatedMessagePayload,
    /**
     * The ProjectSummary model constructor.
     * @property {module:model/ProjectSummary}
     */
    ProjectSummary: ProjectSummary,
    /**
     * The ProjectTagAddedEvent model constructor.
     * @property {module:model/ProjectTagAddedEvent}
     */
    ProjectTagAddedEvent: ProjectTagAddedEvent,
    /**
     * The ProjectTagRemovedEvent model constructor.
     * @property {module:model/ProjectTagRemovedEvent}
     */
    ProjectTagRemovedEvent: ProjectTagRemovedEvent,
    /**
     * The ProjectsCreatedMessagePayload model constructor.
     * @property {module:model/ProjectsCreatedMessagePayload}
     */
    ProjectsCreatedMessagePayload: ProjectsCreatedMessagePayload,
    /**
     * The ProjectsDeletedMessagePayload model constructor.
     * @property {module:model/ProjectsDeletedMessagePayload}
     */
    ProjectsDeletedMessagePayload: ProjectsDeletedMessagePayload,
    /**
     * The Property model constructor.
     * @property {module:model/Property}
     */
    Property: Property,
    /**
     * The PropertyName model constructor.
     * @property {module:model/PropertyName}
     */
    PropertyName: PropertyName,
    /**
     * The ProvisionGroupRequest model constructor.
     * @property {module:model/ProvisionGroupRequest}
     */
    ProvisionGroupRequest: ProvisionGroupRequest,
    /**
     * The ProvisionGroupResponse model constructor.
     * @property {module:model/ProvisionGroupResponse}
     */
    ProvisionGroupResponse: ProvisionGroupResponse,
    /**
     * The Recommendation model constructor.
     * @property {module:model/Recommendation}
     */
    Recommendation: Recommendation,
    /**
     * The RecommendationType model constructor.
     * @property {module:model/RecommendationType}
     */
    RecommendationType: RecommendationType,
    /**
     * The RegisterUserRequest model constructor.
     * @property {module:model/RegisterUserRequest}
     */
    RegisterUserRequest: RegisterUserRequest,
    /**
     * The RemoveContributingUsersRequest model constructor.
     * @property {module:model/RemoveContributingUsersRequest}
     */
    RemoveContributingUsersRequest: RemoveContributingUsersRequest,
    /**
     * The RemovedFromPortfolioMessagePayload model constructor.
     * @property {module:model/RemovedFromPortfolioMessagePayload}
     */
    RemovedFromPortfolioMessagePayload: RemovedFromPortfolioMessagePayload,
    /**
     * The RemovedFromPortfolioPlanMessagePayload model constructor.
     * @property {module:model/RemovedFromPortfolioPlanMessagePayload}
     */
    RemovedFromPortfolioPlanMessagePayload: RemovedFromPortfolioPlanMessagePayload,
    /**
     * The ResourcePoolBudgetAmount model constructor.
     * @property {module:model/ResourcePoolBudgetAmount}
     */
    ResourcePoolBudgetAmount: ResourcePoolBudgetAmount,
    /**
     * The ResourcePoolBudgetAmountPatchItem model constructor.
     * @property {module:model/ResourcePoolBudgetAmountPatchItem}
     */
    ResourcePoolBudgetAmountPatchItem: ResourcePoolBudgetAmountPatchItem,
    /**
     * The ResourcePoolBudgetAmountUpdatedEvent model constructor.
     * @property {module:model/ResourcePoolBudgetAmountUpdatedEvent}
     */
    ResourcePoolBudgetAmountUpdatedEvent: ResourcePoolBudgetAmountUpdatedEvent,
    /**
     * The ResourcePoolCreatedEvent model constructor.
     * @property {module:model/ResourcePoolCreatedEvent}
     */
    ResourcePoolCreatedEvent: ResourcePoolCreatedEvent,
    /**
     * The ResourcePoolDeletedEvent model constructor.
     * @property {module:model/ResourcePoolDeletedEvent}
     */
    ResourcePoolDeletedEvent: ResourcePoolDeletedEvent,
    /**
     * The ResourcePoolFieldValuePatchItem model constructor.
     * @property {module:model/ResourcePoolFieldValuePatchItem}
     */
    ResourcePoolFieldValuePatchItem: ResourcePoolFieldValuePatchItem,
    /**
     * The ResourcePoolFieldValueUpdatedEvent model constructor.
     * @property {module:model/ResourcePoolFieldValueUpdatedEvent}
     */
    ResourcePoolFieldValueUpdatedEvent: ResourcePoolFieldValueUpdatedEvent,
    /**
     * The ResourcePoolFieldValuesUpdatedMessagePayload model constructor.
     * @property {module:model/ResourcePoolFieldValuesUpdatedMessagePayload}
     */
    ResourcePoolFieldValuesUpdatedMessagePayload: ResourcePoolFieldValuesUpdatedMessagePayload,
    /**
     * The ResourcePoolNameUpdatedEvent model constructor.
     * @property {module:model/ResourcePoolNameUpdatedEvent}
     */
    ResourcePoolNameUpdatedEvent: ResourcePoolNameUpdatedEvent,
    /**
     * The ResourcePoolPlanBudgetAmountUpdatedEvent model constructor.
     * @property {module:model/ResourcePoolPlanBudgetAmountUpdatedEvent}
     */
    ResourcePoolPlanBudgetAmountUpdatedEvent: ResourcePoolPlanBudgetAmountUpdatedEvent,
    /**
     * The ResourcePoolPlanBudgetCopiedEvent model constructor.
     * @property {module:model/ResourcePoolPlanBudgetCopiedEvent}
     */
    ResourcePoolPlanBudgetCopiedEvent: ResourcePoolPlanBudgetCopiedEvent,
    /**
     * The ResourcePoolsCreatedMessagePayload model constructor.
     * @property {module:model/ResourcePoolsCreatedMessagePayload}
     */
    ResourcePoolsCreatedMessagePayload: ResourcePoolsCreatedMessagePayload,
    /**
     * The ResourcePoolsDeletedMessagePayload model constructor.
     * @property {module:model/ResourcePoolsDeletedMessagePayload}
     */
    ResourcePoolsDeletedMessagePayload: ResourcePoolsDeletedMessagePayload,
    /**
     * The ResourcePoolsUpdatedMessagePayload model constructor.
     * @property {module:model/ResourcePoolsUpdatedMessagePayload}
     */
    ResourcePoolsUpdatedMessagePayload: ResourcePoolsUpdatedMessagePayload,
    /**
     * The RiskFieldDetail model constructor.
     * @property {module:model/RiskFieldDetail}
     */
    RiskFieldDetail: RiskFieldDetail,
    /**
     * The RiskType model constructor.
     * @property {module:model/RiskType}
     */
    RiskType: RiskType,
    /**
     * The RoleType model constructor.
     * @property {module:model/RoleType}
     */
    RoleType: RoleType,
    /**
     * The Row model constructor.
     * @property {module:model/Row}
     */
    Row: Row,
    /**
     * The Scale model constructor.
     * @property {module:model/Scale}
     */
    Scale: Scale,
    /**
     * The ScalePoint model constructor.
     * @property {module:model/ScalePoint}
     */
    ScalePoint: ScalePoint,
    /**
     * The ScalePointAutoScaleValueUpdatedEvent model constructor.
     * @property {module:model/ScalePointAutoScaleValueUpdatedEvent}
     */
    ScalePointAutoScaleValueUpdatedEvent: ScalePointAutoScaleValueUpdatedEvent,
    /**
     * The ScalePointAutoValueUpdatedEvent model constructor.
     * @property {module:model/ScalePointAutoValueUpdatedEvent}
     */
    ScalePointAutoValueUpdatedEvent: ScalePointAutoValueUpdatedEvent,
    /**
     * The ScalePointCreatedEvent model constructor.
     * @property {module:model/ScalePointCreatedEvent}
     */
    ScalePointCreatedEvent: ScalePointCreatedEvent,
    /**
     * The ScalePointDeletedEvent model constructor.
     * @property {module:model/ScalePointDeletedEvent}
     */
    ScalePointDeletedEvent: ScalePointDeletedEvent,
    /**
     * The ScalePointManualScaleValueUpdatedEvent model constructor.
     * @property {module:model/ScalePointManualScaleValueUpdatedEvent}
     */
    ScalePointManualScaleValueUpdatedEvent: ScalePointManualScaleValueUpdatedEvent,
    /**
     * The ScalePointManualValueUpdatedEvent model constructor.
     * @property {module:model/ScalePointManualValueUpdatedEvent}
     */
    ScalePointManualValueUpdatedEvent: ScalePointManualValueUpdatedEvent,
    /**
     * The ScalePointNameUpdatedEvent model constructor.
     * @property {module:model/ScalePointNameUpdatedEvent}
     */
    ScalePointNameUpdatedEvent: ScalePointNameUpdatedEvent,
    /**
     * The ScalePointProjectUpdatedEvent model constructor.
     * @property {module:model/ScalePointProjectUpdatedEvent}
     */
    ScalePointProjectUpdatedEvent: ScalePointProjectUpdatedEvent,
    /**
     * The SchedulingCriteria model constructor.
     * @property {module:model/SchedulingCriteria}
     */
    SchedulingCriteria: SchedulingCriteria,
    /**
     * The Schema model constructor.
     * @property {module:model/Schema}
     */
    Schema: Schema,
    /**
     * The ScoreWeightCreatedEvent model constructor.
     * @property {module:model/ScoreWeightCreatedEvent}
     */
    ScoreWeightCreatedEvent: ScoreWeightCreatedEvent,
    /**
     * The ScoreWeightDeletedEvent model constructor.
     * @property {module:model/ScoreWeightDeletedEvent}
     */
    ScoreWeightDeletedEvent: ScoreWeightDeletedEvent,
    /**
     * The ScoreWeightFieldWeightCreatedEvent model constructor.
     * @property {module:model/ScoreWeightFieldWeightCreatedEvent}
     */
    ScoreWeightFieldWeightCreatedEvent: ScoreWeightFieldWeightCreatedEvent,
    /**
     * The ScoreWeightFieldWeightDeletedEvent model constructor.
     * @property {module:model/ScoreWeightFieldWeightDeletedEvent}
     */
    ScoreWeightFieldWeightDeletedEvent: ScoreWeightFieldWeightDeletedEvent,
    /**
     * The ScoreWeightFieldWeightLockUpdatedEvent model constructor.
     * @property {module:model/ScoreWeightFieldWeightLockUpdatedEvent}
     */
    ScoreWeightFieldWeightLockUpdatedEvent: ScoreWeightFieldWeightLockUpdatedEvent,
    /**
     * The ScoreWeightFieldWeightValueUpdatedEvent model constructor.
     * @property {module:model/ScoreWeightFieldWeightValueUpdatedEvent}
     */
    ScoreWeightFieldWeightValueUpdatedEvent: ScoreWeightFieldWeightValueUpdatedEvent,
    /**
     * The ScoreWeightNameUpdatedEvent model constructor.
     * @property {module:model/ScoreWeightNameUpdatedEvent}
     */
    ScoreWeightNameUpdatedEvent: ScoreWeightNameUpdatedEvent,
    /**
     * The ScoreWeightsUpdatedMessagePayload model constructor.
     * @property {module:model/ScoreWeightsUpdatedMessagePayload}
     */
    ScoreWeightsUpdatedMessagePayload: ScoreWeightsUpdatedMessagePayload,
    /**
     * The SetDependenciesRequest model constructor.
     * @property {module:model/SetDependenciesRequest}
     */
    SetDependenciesRequest: SetDependenciesRequest,
    /**
     * The Sheet model constructor.
     * @property {module:model/Sheet}
     */
    Sheet: Sheet,
    /**
     * The SourceCreatedEvent model constructor.
     * @property {module:model/SourceCreatedEvent}
     */
    SourceCreatedEvent: SourceCreatedEvent,
    /**
     * The SourceDeletedEvent model constructor.
     * @property {module:model/SourceDeletedEvent}
     */
    SourceDeletedEvent: SourceDeletedEvent,
    /**
     * The SourceNameUpdatedEvent model constructor.
     * @property {module:model/SourceNameUpdatedEvent}
     */
    SourceNameUpdatedEvent: SourceNameUpdatedEvent,
    /**
     * The SourceType model constructor.
     * @property {module:model/SourceType}
     */
    SourceType: SourceType,
    /**
     * The SpreadsheetReport model constructor.
     * @property {module:model/SpreadsheetReport}
     */
    SpreadsheetReport: SpreadsheetReport,
    /**
     * The SpreadsheetReportProgress model constructor.
     * @property {module:model/SpreadsheetReportProgress}
     */
    SpreadsheetReportProgress: SpreadsheetReportProgress,
    /**
     * The SpreadsheetReportProgressMessagePayload model constructor.
     * @property {module:model/SpreadsheetReportProgressMessagePayload}
     */
    SpreadsheetReportProgressMessagePayload: SpreadsheetReportProgressMessagePayload,
    /**
     * The SpreadsheetReportProgressStatus model constructor.
     * @property {module:model/SpreadsheetReportProgressStatus}
     */
    SpreadsheetReportProgressStatus: SpreadsheetReportProgressStatus,
    /**
     * The SubPortfolioAddedEvent model constructor.
     * @property {module:model/SubPortfolioAddedEvent}
     */
    SubPortfolioAddedEvent: SubPortfolioAddedEvent,
    /**
     * The SubPortfolioRemovedEvent model constructor.
     * @property {module:model/SubPortfolioRemovedEvent}
     */
    SubPortfolioRemovedEvent: SubPortfolioRemovedEvent,
    /**
     * The TagAddedMessagePayload model constructor.
     * @property {module:model/TagAddedMessagePayload}
     */
    TagAddedMessagePayload: TagAddedMessagePayload,
    /**
     * The TagColorUpdatedEvent model constructor.
     * @property {module:model/TagColorUpdatedEvent}
     */
    TagColorUpdatedEvent: TagColorUpdatedEvent,
    /**
     * The TagCreatedEvent model constructor.
     * @property {module:model/TagCreatedEvent}
     */
    TagCreatedEvent: TagCreatedEvent,
    /**
     * The TagDeletedEvent model constructor.
     * @property {module:model/TagDeletedEvent}
     */
    TagDeletedEvent: TagDeletedEvent,
    /**
     * The TagDeletedMessagePayload model constructor.
     * @property {module:model/TagDeletedMessagePayload}
     */
    TagDeletedMessagePayload: TagDeletedMessagePayload,
    /**
     * The TagNameUpdatedEvent model constructor.
     * @property {module:model/TagNameUpdatedEvent}
     */
    TagNameUpdatedEvent: TagNameUpdatedEvent,
    /**
     * The TagParentUpdatedEvent model constructor.
     * @property {module:model/TagParentUpdatedEvent}
     */
    TagParentUpdatedEvent: TagParentUpdatedEvent,
    /**
     * The TagUpdatedMessagePayload model constructor.
     * @property {module:model/TagUpdatedMessagePayload}
     */
    TagUpdatedMessagePayload: TagUpdatedMessagePayload,
    /**
     * The TargetType model constructor.
     * @property {module:model/TargetType}
     */
    TargetType: TargetType,
    /**
     * The TemplateProperty model constructor.
     * @property {module:model/TemplateProperty}
     */
    TemplateProperty: TemplateProperty,
    /**
     * The TimeInterval model constructor.
     * @property {module:model/TimeInterval}
     */
    TimeInterval: TimeInterval,
    /**
     * The TimePeriod model constructor.
     * @property {module:model/TimePeriod}
     */
    TimePeriod: TimePeriod,
    /**
     * The TimePeriodType model constructor.
     * @property {module:model/TimePeriodType}
     */
    TimePeriodType: TimePeriodType,
    /**
     * The ToastMessagePayload model constructor.
     * @property {module:model/ToastMessagePayload}
     */
    ToastMessagePayload: ToastMessagePayload,
    /**
     * The UserActivityTimestamp model constructor.
     * @property {module:model/UserActivityTimestamp}
     */
    UserActivityTimestamp: UserActivityTimestamp,
    /**
     * The UserActivityTimestamps model constructor.
     * @property {module:model/UserActivityTimestamps}
     */
    UserActivityTimestamps: UserActivityTimestamps,
    /**
     * The UserAddedEvent model constructor.
     * @property {module:model/UserAddedEvent}
     */
    UserAddedEvent: UserAddedEvent,
    /**
     * The UserApprovalAddedEvent model constructor.
     * @property {module:model/UserApprovalAddedEvent}
     */
    UserApprovalAddedEvent: UserApprovalAddedEvent,
    /**
     * The UserAuthenticatedEvent model constructor.
     * @property {module:model/UserAuthenticatedEvent}
     */
    UserAuthenticatedEvent: UserAuthenticatedEvent,
    /**
     * The UserGroupAddedEvent model constructor.
     * @property {module:model/UserGroupAddedEvent}
     */
    UserGroupAddedEvent: UserGroupAddedEvent,
    /**
     * The UserRegistrationToken model constructor.
     * @property {module:model/UserRegistrationToken}
     */
    UserRegistrationToken: UserRegistrationToken,
    /**
     * The UserStatus model constructor.
     * @property {module:model/UserStatus}
     */
    UserStatus: UserStatus,
    /**
     * The ValueCount model constructor.
     * @property {module:model/ValueCount}
     */
    ValueCount: ValueCount,
    /**
     * The ValueInsights model constructor.
     * @property {module:model/ValueInsights}
     */
    ValueInsights: ValueInsights,
    /**
     * The Warnings model constructor.
     * @property {module:model/Warnings}
     */
    Warnings: Warnings,
    /**
     * The WhatsIn model constructor.
     * @property {module:model/WhatsIn}
     */
    WhatsIn: WhatsIn,
    /**
     * The Wiwo model constructor.
     * @property {module:model/Wiwo}
     */
    Wiwo: Wiwo,
    /**
     * The Activities model constructor.
     * @property {module:model/Activities}
     */
    Activities: Activities,
    /**
     * The Activity model constructor.
     * @property {module:model/Activity}
     */
    Activity: Activity,
    /**
     * The Attachment model constructor.
     * @property {module:model/Attachment}
     */
    Attachment: Attachment,
    /**
     * The Attachments model constructor.
     * @property {module:model/Attachments}
     */
    Attachments: Attachments,
    /**
     * The BudgetAllocations model constructor.
     * @property {module:model/BudgetAllocations}
     */
    BudgetAllocations: BudgetAllocations,
    /**
     * The CategoryOption model constructor.
     * @property {module:model/CategoryOption}
     */
    CategoryOption: CategoryOption,
    /**
     * The CategoryOptions model constructor.
     * @property {module:model/CategoryOptions}
     */
    CategoryOptions: CategoryOptions,
    /**
     * The Classifications model constructor.
     * @property {module:model/Classifications}
     */
    Classifications: Classifications,
    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment: Comment,
    /**
     * The Comments model constructor.
     * @property {module:model/Comments}
     */
    Comments: Comments,
    /**
     * The CustomNames model constructor.
     * @property {module:model/CustomNames}
     */
    CustomNames: CustomNames,
    /**
     * The Field model constructor.
     * @property {module:model/Field}
     */
    Field: Field,
    /**
     * The FieldGrades model constructor.
     * @property {module:model/FieldGrades}
     */
    FieldGrades: FieldGrades,
    /**
     * The FieldValues model constructor.
     * @property {module:model/FieldValues}
     */
    FieldValues: FieldValues,
    /**
     * The Fields model constructor.
     * @property {module:model/Fields}
     */
    Fields: Fields,
    /**
     * The FileAttachment model constructor.
     * @property {module:model/FileAttachment}
     */
    FileAttachment: FileAttachment,
    /**
     * The Goals model constructor.
     * @property {module:model/Goals}
     */
    Goals: Goals,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The Groups model constructor.
     * @property {module:model/Groups}
     */
    Groups: Groups,
    /**
     * The JiraFieldMapping model constructor.
     * @property {module:model/JiraFieldMapping}
     */
    JiraFieldMapping: JiraFieldMapping,
    /**
     * The JiraFieldMappings model constructor.
     * @property {module:model/JiraFieldMappings}
     */
    JiraFieldMappings: JiraFieldMappings,
    /**
     * The JiraInstance model constructor.
     * @property {module:model/JiraInstance}
     */
    JiraInstance: JiraInstance,
    /**
     * The Mapping model constructor.
     * @property {module:model/Mapping}
     */
    Mapping: Mapping,
    /**
     * The Permissions model constructor.
     * @property {module:model/Permissions}
     */
    Permissions: Permissions,
    /**
     * The PlanGrade model constructor.
     * @property {module:model/PlanGrade}
     */
    PlanGrade: PlanGrade,
    /**
     * The Portfolio model constructor.
     * @property {module:model/Portfolio}
     */
    Portfolio: Portfolio,
    /**
     * The PortfolioPlan model constructor.
     * @property {module:model/PortfolioPlan}
     */
    PortfolioPlan: PortfolioPlan,
    /**
     * The PortfolioPlanGrades model constructor.
     * @property {module:model/PortfolioPlanGrades}
     */
    PortfolioPlanGrades: PortfolioPlanGrades,
    /**
     * The PortfolioPlanInsights model constructor.
     * @property {module:model/PortfolioPlanInsights}
     */
    PortfolioPlanInsights: PortfolioPlanInsights,
    /**
     * The PortfolioPlanUser model constructor.
     * @property {module:model/PortfolioPlanUser}
     */
    PortfolioPlanUser: PortfolioPlanUser,
    /**
     * The PortfolioPlanUsers model constructor.
     * @property {module:model/PortfolioPlanUsers}
     */
    PortfolioPlanUsers: PortfolioPlanUsers,
    /**
     * The PortfolioPlans model constructor.
     * @property {module:model/PortfolioPlans}
     */
    PortfolioPlans: PortfolioPlans,
    /**
     * The Portfolios model constructor.
     * @property {module:model/Portfolios}
     */
    Portfolios: Portfolios,
    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project: Project,
    /**
     * The Projects model constructor.
     * @property {module:model/Projects}
     */
    Projects: Projects,
    /**
     * The Properties model constructor.
     * @property {module:model/Properties}
     */
    Properties: Properties,
    /**
     * The Recommendations model constructor.
     * @property {module:model/Recommendations}
     */
    Recommendations: Recommendations,
    /**
     * The ResourcePool model constructor.
     * @property {module:model/ResourcePool}
     */
    ResourcePool: ResourcePool,
    /**
     * The ResourcePoolBudgetAmounts model constructor.
     * @property {module:model/ResourcePoolBudgetAmounts}
     */
    ResourcePoolBudgetAmounts: ResourcePoolBudgetAmounts,
    /**
     * The ResourcePoolFieldValue model constructor.
     * @property {module:model/ResourcePoolFieldValue}
     */
    ResourcePoolFieldValue: ResourcePoolFieldValue,
    /**
     * The ResourcePools model constructor.
     * @property {module:model/ResourcePools}
     */
    ResourcePools: ResourcePools,
    /**
     * The ScoreWeight model constructor.
     * @property {module:model/ScoreWeight}
     */
    ScoreWeight: ScoreWeight,
    /**
     * The ScoreWeights model constructor.
     * @property {module:model/ScoreWeights}
     */
    ScoreWeights: ScoreWeights,
    /**
     * The Sheets model constructor.
     * @property {module:model/Sheets}
     */
    Sheets: Sheets,
    /**
     * The Source model constructor.
     * @property {module:model/Source}
     */
    Source: Source,
    /**
     * The Spreadsheet model constructor.
     * @property {module:model/Spreadsheet}
     */
    Spreadsheet: Spreadsheet,
    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag: Tag,
    /**
     * The Tags model constructor.
     * @property {module:model/Tags}
     */
    Tags: Tags,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The Users model constructor.
     * @property {module:model/Users}
     */
    Users: Users,
    /**
     * The ValueCounts model constructor.
     * @property {module:model/ValueCounts}
     */
    ValueCounts: ValueCounts,
    /**
     * The ActivitiesApi service constructor.
     * @property {module:api/ActivitiesApi}
     */
    ActivitiesApi: ActivitiesApi,
    /**
     * The ApiActivityApi service constructor.
     * @property {module:api/ApiActivityApi}
     */
    ApiActivityApi: ApiActivityApi,
    /**
     * The AttachmentsApi service constructor.
     * @property {module:api/AttachmentsApi}
     */
    AttachmentsApi: AttachmentsApi,
    /**
     * The BudgetFieldsApi service constructor.
     * @property {module:api/BudgetFieldsApi}
     */
    BudgetFieldsApi: BudgetFieldsApi,
    /**
     * The ClassificationApi service constructor.
     * @property {module:api/ClassificationApi}
     */
    ClassificationApi: ClassificationApi,
    /**
     * The CommentsApi service constructor.
     * @property {module:api/CommentsApi}
     */
    CommentsApi: CommentsApi,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi,
    /**
     * The FieldsApi service constructor.
     * @property {module:api/FieldsApi}
     */
    FieldsApi: FieldsApi,
    /**
     * The GoalsApi service constructor.
     * @property {module:api/GoalsApi}
     */
    GoalsApi: GoalsApi,
    /**
     * The GroupsApi service constructor.
     * @property {module:api/GroupsApi}
     */
    GroupsApi: GroupsApi,
    /**
     * The JiraApi service constructor.
     * @property {module:api/JiraApi}
     */
    JiraApi: JiraApi,
    /**
     * The LogoutApi service constructor.
     * @property {module:api/LogoutApi}
     */
    LogoutApi: LogoutApi,
    /**
     * The MailApi service constructor.
     * @property {module:api/MailApi}
     */
    MailApi: MailApi,
    /**
     * The MappingsApi service constructor.
     * @property {module:api/MappingsApi}
     */
    MappingsApi: MappingsApi,
    /**
     * The MessageTokensApi service constructor.
     * @property {module:api/MessageTokensApi}
     */
    MessageTokensApi: MessageTokensApi,
    /**
     * The MessagesApi service constructor.
     * @property {module:api/MessagesApi}
     */
    MessagesApi: MessagesApi,
    /**
     * The NotificationsApi service constructor.
     * @property {module:api/NotificationsApi}
     */
    NotificationsApi: NotificationsApi,
    /**
     * The PlansApi service constructor.
     * @property {module:api/PlansApi}
     */
    PlansApi: PlansApi,
    /**
     * The PodsApi service constructor.
     * @property {module:api/PodsApi}
     */
    PodsApi: PodsApi,
    /**
     * The PortfolioPlanUsersApi service constructor.
     * @property {module:api/PortfolioPlanUsersApi}
     */
    PortfolioPlanUsersApi: PortfolioPlanUsersApi,
    /**
     * The PortfolioPlansApi service constructor.
     * @property {module:api/PortfolioPlansApi}
     */
    PortfolioPlansApi: PortfolioPlansApi,
    /**
     * The PortfoliosApi service constructor.
     * @property {module:api/PortfoliosApi}
     */
    PortfoliosApi: PortfoliosApi,
    /**
     * The ProjectsApi service constructor.
     * @property {module:api/ProjectsApi}
     */
    ProjectsApi: ProjectsApi,
    /**
     * The PropertiesApi service constructor.
     * @property {module:api/PropertiesApi}
     */
    PropertiesApi: PropertiesApi,
    /**
     * The RegistrationApi service constructor.
     * @property {module:api/RegistrationApi}
     */
    RegistrationApi: RegistrationApi,
    /**
     * The ReportsApi service constructor.
     * @property {module:api/ReportsApi}
     */
    ReportsApi: ReportsApi,
    /**
     * The ResourcePoolsApi service constructor.
     * @property {module:api/ResourcePoolsApi}
     */
    ResourcePoolsApi: ResourcePoolsApi,
    /**
     * The ScoreWeightsApi service constructor.
     * @property {module:api/ScoreWeightsApi}
     */
    ScoreWeightsApi: ScoreWeightsApi,
    /**
     * The SourcesApi service constructor.
     * @property {module:api/SourcesApi}
     */
    SourcesApi: SourcesApi,
    /**
     * The SpreadsheetApi service constructor.
     * @property {module:api/SpreadsheetApi}
     */
    SpreadsheetApi: SpreadsheetApi,
    /**
     * The TagsApi service constructor.
     * @property {module:api/TagsApi}
     */
    TagsApi: TagsApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
