/**
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Attributes', 'model/CustomNames', 'model/DlResource', 'model/Fields', 'model/Portfolio', 'model/PortfolioPlanUser', 'model/PortfolioPlanUsers', 'model/PortfolioPlans', 'model/Projects', 'model/ResourcePools', 'model/UserActivityTimestamps'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Attributes'), require('./CustomNames'), require('./DlResource'), require('./Fields'), require('./Portfolio'), require('./PortfolioPlanUser'), require('./PortfolioPlanUsers'), require('./PortfolioPlans'), require('./Projects'), require('./ResourcePools'), require('./UserActivityTimestamps'));
  } else {
    // Browser globals (root is window)
    if (!root.DecisionLensApi) {
      root.DecisionLensApi = {};
    }
    root.DecisionLensApi.Portfolio = factory(root.DecisionLensApi.ApiClient, root.DecisionLensApi.Attributes, root.DecisionLensApi.CustomNames, root.DecisionLensApi.DlResource, root.DecisionLensApi.Fields, root.DecisionLensApi.Portfolio, root.DecisionLensApi.PortfolioPlanUser, root.DecisionLensApi.PortfolioPlanUsers, root.DecisionLensApi.PortfolioPlans, root.DecisionLensApi.Projects, root.DecisionLensApi.ResourcePools, root.DecisionLensApi.UserActivityTimestamps);
  }
}(this, function(ApiClient, Attributes, CustomNames, DlResource, Fields, Portfolio, PortfolioPlanUser, PortfolioPlanUsers, PortfolioPlans, Projects, ResourcePools, UserActivityTimestamps) {
  'use strict';




  /**
   * The Portfolio model module.
   * @module model/Portfolio
   * @version 1.0
   */

  /**
   * Constructs a new <code>Portfolio</code>.
   * @alias module:model/Portfolio
   * @class
   * @extends module:model/DlResource
   */
  var exports = function() {
    var _this = this;
    DlResource.call(_this);


















  };

  /**
   * Constructs a <code>Portfolio</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Portfolio} obj Optional instance to populate.
   * @return {module:model/Portfolio} The populated <code>Portfolio</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      DlResource.constructFromObject(data, obj);
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('isArchived')) {
        obj['isArchived'] = ApiClient.convertToType(data['isArchived'], 'Boolean');
      }
      if (data.hasOwnProperty('lastUpdatedAt')) {
        obj['lastUpdatedAt'] = UserActivityTimestamps.constructFromObject(data['lastUpdatedAt']);
      }
      if (data.hasOwnProperty('baselinePortfolioPlanUser')) {
        obj['baselinePortfolioPlanUser'] = PortfolioPlanUser.constructFromObject(data['baselinePortfolioPlanUser']);
      }
      if (data.hasOwnProperty('fields')) {
        obj['fields'] = Fields.constructFromObject(data['fields']);
      }
      if (data.hasOwnProperty('projects')) {
        obj['projects'] = Projects.constructFromObject(data['projects']);
      }
      if (data.hasOwnProperty('portfolioPlans')) {
        obj['portfolioPlans'] = PortfolioPlans.constructFromObject(data['portfolioPlans']);
      }
      if (data.hasOwnProperty('portfolioPlanUsers')) {
        obj['portfolioPlanUsers'] = PortfolioPlanUsers.constructFromObject(data['portfolioPlanUsers']);
      }
      if (data.hasOwnProperty('attributes')) {
        obj['attributes'] = Attributes.constructFromObject(data['attributes']);
      }
      if (data.hasOwnProperty('isCombined')) {
        obj['isCombined'] = ApiClient.convertToType(data['isCombined'], 'Boolean');
      }
      if (data.hasOwnProperty('userRegistrationToken')) {
        obj['userRegistrationToken'] = ApiClient.convertToType(data['userRegistrationToken'], 'String');
      }
      if (data.hasOwnProperty('subPortfolios')) {
        obj['subPortfolios'] = ApiClient.convertToType(data['subPortfolios'], [Portfolio]);
      }
      if (data.hasOwnProperty('combinedPortfolios')) {
        obj['combinedPortfolios'] = ApiClient.convertToType(data['combinedPortfolios'], [Portfolio]);
      }
      if (data.hasOwnProperty('resourcePools')) {
        obj['resourcePools'] = ResourcePools.constructFromObject(data['resourcePools']);
      }
      if (data.hasOwnProperty('totalBudget')) {
        obj['totalBudget'] = ApiClient.convertToType(data['totalBudget'], 'Number');
      }
      if (data.hasOwnProperty('newNotificationsCount')) {
        obj['newNotificationsCount'] = ApiClient.convertToType(data['newNotificationsCount'], 'Number');
      }
      if (data.hasOwnProperty('customNames')) {
        obj['customNames'] = CustomNames.constructFromObject(data['customNames']);
      }
    }
    return obj;
  }

  exports.prototype = Object.create(DlResource.prototype);
  exports.prototype.constructor = exports;

  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {Boolean} isArchived
   */
  exports.prototype['isArchived'] = undefined;
  /**
   * @member {module:model/UserActivityTimestamps} lastUpdatedAt
   */
  exports.prototype['lastUpdatedAt'] = undefined;
  /**
   * @member {module:model/PortfolioPlanUser} baselinePortfolioPlanUser
   */
  exports.prototype['baselinePortfolioPlanUser'] = undefined;
  /**
   * @member {module:model/Fields} fields
   */
  exports.prototype['fields'] = undefined;
  /**
   * @member {module:model/Projects} projects
   */
  exports.prototype['projects'] = undefined;
  /**
   * @member {module:model/PortfolioPlans} portfolioPlans
   */
  exports.prototype['portfolioPlans'] = undefined;
  /**
   * @member {module:model/PortfolioPlanUsers} portfolioPlanUsers
   */
  exports.prototype['portfolioPlanUsers'] = undefined;
  /**
   * @member {module:model/Attributes} attributes
   */
  exports.prototype['attributes'] = undefined;
  /**
   * @member {Boolean} isCombined
   */
  exports.prototype['isCombined'] = undefined;
  /**
   * user registration token string
   * @member {String} userRegistrationToken
   */
  exports.prototype['userRegistrationToken'] = undefined;
  /**
   * @member {Array.<module:model/Portfolio>} subPortfolios
   */
  exports.prototype['subPortfolios'] = undefined;
  /**
   * @member {Array.<module:model/Portfolio>} combinedPortfolios
   */
  exports.prototype['combinedPortfolios'] = undefined;
  /**
   * @member {module:model/ResourcePools} resourcePools
   */
  exports.prototype['resourcePools'] = undefined;
  /**
   * @member {Number} totalBudget
   * @default 0.0
   */
  exports.prototype['totalBudget'] = 0.0;
  /**
   * @member {Number} newNotificationsCount
   */
  exports.prototype['newNotificationsCount'] = undefined;
  /**
   * @member {module:model/CustomNames} customNames
   */
  exports.prototype['customNames'] = undefined;



  return exports;
}));


