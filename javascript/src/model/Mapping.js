/**
 * Decision Lens API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DataType', 'model/DlResource', 'model/FieldType', 'model/ImportType', 'model/TargetType', 'model/TimePeriod'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DataType'), require('./DlResource'), require('./FieldType'), require('./ImportType'), require('./TargetType'), require('./TimePeriod'));
  } else {
    // Browser globals (root is window)
    if (!root.DecisionLensApi) {
      root.DecisionLensApi = {};
    }
    root.DecisionLensApi.Mapping = factory(root.DecisionLensApi.ApiClient, root.DecisionLensApi.DataType, root.DecisionLensApi.DlResource, root.DecisionLensApi.FieldType, root.DecisionLensApi.ImportType, root.DecisionLensApi.TargetType, root.DecisionLensApi.TimePeriod);
  }
}(this, function(ApiClient, DataType, DlResource, FieldType, ImportType, TargetType, TimePeriod) {
  'use strict';




  /**
   * The Mapping model module.
   * @module model/Mapping
   * @version 1.0
   */

  /**
   * Constructs a new <code>Mapping</code>.
   * @alias module:model/Mapping
   * @class
   * @extends module:model/DlResource
   */
  var exports = function() {
    var _this = this;
    DlResource.call(_this);












  };

  /**
   * Constructs a <code>Mapping</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Mapping} obj Optional instance to populate.
   * @return {module:model/Mapping} The populated <code>Mapping</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      DlResource.constructFromObject(data, obj);
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('originalName')) {
        obj['originalName'] = ApiClient.convertToType(data['originalName'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = FieldType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('inititalType')) {
        obj['inititalType'] = FieldType.constructFromObject(data['inititalType']);
      }
      if (data.hasOwnProperty('targetType')) {
        obj['targetType'] = TargetType.constructFromObject(data['targetType']);
      }
      if (data.hasOwnProperty('dataType')) {
        obj['dataType'] = DataType.constructFromObject(data['dataType']);
      }
      if (data.hasOwnProperty('importType')) {
        obj['importType'] = ImportType.constructFromObject(data['importType']);
      }
      if (data.hasOwnProperty('position')) {
        obj['position'] = ApiClient.convertToType(data['position'], 'Number');
      }
      if (data.hasOwnProperty('values')) {
        obj['values'] = ApiClient.convertToType(data['values'], ['String']);
      }
      if (data.hasOwnProperty('numericValues')) {
        obj['numericValues'] = ApiClient.convertToType(data['numericValues'], ['Number']);
      }
      if (data.hasOwnProperty('booleanValues')) {
        obj['booleanValues'] = ApiClient.convertToType(data['booleanValues'], ['Boolean']);
      }
      if (data.hasOwnProperty('timePeriod')) {
        obj['timePeriod'] = TimePeriod.constructFromObject(data['timePeriod']);
      }
    }
    return obj;
  }

  exports.prototype = Object.create(DlResource.prototype);
  exports.prototype.constructor = exports;

  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} originalName
   */
  exports.prototype['originalName'] = undefined;
  /**
   * @member {module:model/FieldType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/FieldType} inititalType
   */
  exports.prototype['inititalType'] = undefined;
  /**
   * @member {module:model/TargetType} targetType
   */
  exports.prototype['targetType'] = undefined;
  /**
   * @member {module:model/DataType} dataType
   */
  exports.prototype['dataType'] = undefined;
  /**
   * @member {module:model/ImportType} importType
   */
  exports.prototype['importType'] = undefined;
  /**
   * @member {Number} position
   */
  exports.prototype['position'] = undefined;
  /**
   * @member {Array.<String>} values
   */
  exports.prototype['values'] = undefined;
  /**
   * @member {Array.<Number>} numericValues
   */
  exports.prototype['numericValues'] = undefined;
  /**
   * @member {Array.<Boolean>} booleanValues
   */
  exports.prototype['booleanValues'] = undefined;
  /**
   * @member {module:model/TimePeriod} timePeriod
   */
  exports.prototype['timePeriod'] = undefined;



  return exports;
}));


